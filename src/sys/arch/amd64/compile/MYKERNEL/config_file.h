#include <sys/cdefs.h>

#include "opt_config.h"

/*
 * Add either (or both) of
 *
 *	options INCLUDE_CONFIG_FILE
 *	options INCLUDE_JUST_CONFIG
 *
 * to your kernel config file to embed it in the resulting
 * kernel.  The latter option does not include files that are
 * included (recursively) by your config file.  The embedded
 * data be extracted by using the command:
 *
 *	strings netbsd | sed -n 's/^_CFG_//p' | unvis
 */

#ifdef CONFIG_FILE
#if defined(INCLUDE_CONFIG_FILE) || defined(INCLUDE_JUST_CONFIG)

static const char config[] __used =

#ifdef INCLUDE_CONFIG_FILE

"_CFG_### START CONFIG FILE \"MYKERNEL\"\n"

#endif /* INCLUDE_CONFIG_FILE */

"_CFG_# $NetBSD: GENERIC,v 1.392.2.9 2016/12/23 06:33:56 snj Exp $\n"
"_CFG_#\n"
"_CFG_# GENERIC machine description file\n"
"_CFG_#\n"
"_CFG_# This machine description file is used to generate the default NetBSD\n"
"_CFG_# kernel.  The generic kernel does not include all options, subsystems\n"
"_CFG_# and device drivers, but should be useful for most applications.\n"
"_CFG_#\n"
"_CFG_# The machine description file can be customised for your specific\n"
"_CFG_# machine to reduce the kernel size and improve its performance.\n"
"_CFG_#\n"
"_CFG_# For further information on compiling NetBSD kernels, see the config(8)\n"
"_CFG_# man page.\n"
"_CFG_#\n"
"_CFG_# For further information on hardware support for this architecture, see\n"
"_CFG_# the intro(4) man page.  For further information about kernel options\n"
"_CFG_# for this architecture, see the options(4) man page.  For an explanation\n"
"_CFG_# of each device driver in this file see the section 4 man page for the\n"
"_CFG_# device.\n"
"_CFG_\n"
"_CFG_include\\011\"arch/amd64/conf/std.amd64\"\n"
"_CFG_\n"
"_CFG_options \\011INCLUDE_CONFIG_FILE\\011# embed config file in kernel binary\n"
"_CFG_\n"
"_CFG_#ident \\011\\011\"MYKERNEL-$Revision: 1.392.2.9 $\"\n"
"_CFG_\n"
"_CFG_maxusers\\01164\\011\\011# estimated number of users\n"
"_CFG_\n"
"_CFG_# delay between \"rebooting ...\" message and hardware reset, in milliseconds\n"
"_CFG_#options \\011CPURESET_DELAY=2000\n"
"_CFG_\n"
"_CFG_# This option allows you to force a serial console at the specified\n"
"_CFG_# I/O address.   see console(4) for details.\n"
"_CFG_#options \\011CONSDEVNAME=\"\\134\"com\\134\"\",CONADDR=0x2f8,CONSPEED=57600\n"
"_CFG_#\\011you don't want the option below ON iff you are using the\n"
"_CFG_#\\011serial console option of the new boot strap code.\n"
"_CFG_#options \\011CONS_OVERRIDE\\011# Always use above! independent of boot info\n"
"_CFG_\n"
"_CFG_# The following options override the memory sizes passed in from the boot\n"
"_CFG_# block.  Use them *only* if the boot block is unable to determine the correct\n"
"_CFG_# values.  Note that the BIOS may *correctly* report less than 640k of base\n"
"_CFG_# memory if the extended BIOS data area is located at the top of base memory\n"
"_CFG_# (as is the case on most recent systems).\n"
"_CFG_#options \\011REALBASEMEM=639\\011\\011# size of base memory (in KB)\n"
"_CFG_#options \\011REALEXTMEM=15360\\011# size of extended memory (in KB)\n"
"_CFG_\n"
"_CFG_# The following options limit the overall size of physical memory\n"
"_CFG_# and/or the maximum address used by the system.\n"
"_CFG_# Contrary to REALBASEMEM and REALEXTMEM, they still use the BIOS memory map\n"
"_CFG_# and can deal with holes in the memory layout.\n"
"_CFG_#options \\011PHYSMEM_MAX_SIZE=64\\011# max size of physical memory (in MB)\n"
"_CFG_#options \\011PHYSMEM_MAX_ADDR=2048\\011# don't use memory above this (in MB)\n"
"_CFG_\n"
"_CFG_# Standard system options\n"
"_CFG_\n"
"_CFG_options \\011INSECURE\\011# disable kernel security levels - X needs this\n"
"_CFG_\n"
"_CFG_options \\011RTC_OFFSET=0\\011# hardware clock is this many mins. west of GMT\n"
"_CFG_options \\011NTP\\011\\011# NTP phase/frequency locked loop\n"
"_CFG_\n"
"_CFG_options \\011KTRACE\\011\\011# system call tracing via ktrace(1)\n"
"_CFG_\n"
"_CFG_options\\011\\011CPU_UCODE\\011# cpu ucode loading support\n"
"_CFG_\n"
"_CFG_# Note: SysV IPC parameters could be changed dynamically, see sysctl(8).\n"
"_CFG_options \\011SYSVMSG\\011\\011# System V-like message queues\n"
"_CFG_options \\011SYSVSEM\\011\\011# System V-like semaphores\n"
"_CFG_options \\011SYSVSHM\\011\\011# System V-like memory sharing\n"
"_CFG_\n"
"_CFG_options \\011MODULAR\\011\\011# new style module(7) framework\n"
"_CFG_options \\011MODULAR_DEFAULT_AUTOLOAD\n"
"_CFG_options \\011USERCONF\\011# userconf(4) support\n"
"_CFG_#options \\011PIPE_SOCKETPAIR\\011# smaller, but slower pipe(2)\n"
"_CFG_options \\011SYSCTL_INCLUDE_DESCR\\011# Include sysctl descriptions in kernel\n"
"_CFG_\n"
"_CFG_# CPU features\n"
"_CFG_acpicpu*\\011at cpu?\\011\\011# ACPI CPU (including frequency scaling)\n"
"_CFG_coretemp*\\011at cpu?\\011\\011# Intel on-die thermal sensor\n"
"_CFG_est0\\011\\011at cpu0\\011\\011# Intel Enhanced SpeedStep (non-ACPI)\n"
"_CFG_#odcm0\\011\\011at cpu0\\011\\011# On-demand clock modulation\n"
"_CFG_powernow0\\011at cpu0\\011\\011# AMD PowerNow! and Cool'n'Quiet (non-ACPI)\n"
"_CFG_vmt0\\011\\011at cpu0\\011\\011# VMware Tools\n"
"_CFG_\n"
"_CFG_# Alternate buffer queue strategies for better responsiveness under high\n"
"_CFG_# disk I/O load.\n"
"_CFG_#options \\011BUFQ_READPRIO\n"
"_CFG_options \\011BUFQ_PRIOCSCAN\n"
"_CFG_\n"
"_CFG_# Diagnostic/debugging support options\n"
"_CFG_#options \\011DIAGNOSTIC\\011# inexpensive kernel consistency checks\n"
"_CFG_\\011\\011\\011\\011# XXX to be commented out on release branch\n"
"_CFG_#options \\011DEBUG\\011\\011# expensive debugging checks/support\n"
"_CFG_#options \\011LOCKDEBUG\\011# expensive locking checks/support\n"
"_CFG_#options \\011KMEMSTATS\\011# kernel memory statistics (vmstat -m)\n"
"_CFG_\n"
"_CFG_#\n"
"_CFG_# Because gcc omits the frame pointer for any -O level, the line below\n"
"_CFG_# is needed to make backtraces in DDB work.\n"
"_CFG_#\n"
"_CFG_makeoptions\\011COPTS=\"-O2 -fno-omit-frame-pointer\"\n"
"_CFG_options \\011DDB\\011\\011# in-kernel debugger\n"
"_CFG_#options\\011DDB_COMMANDONENTER=\"bt\"\\011# execute command when ddb is entered\n"
"_CFG_#options \\011DDB_ONPANIC=1\\011# see also sysctl(7): `ddb.onpanic'\n"
"_CFG_options \\011DDB_HISTORY_SIZE=512\\011# enable history editing in DDB\n"
"_CFG_#options \\011KGDB\\011\\011# remote debugger\n"
"_CFG_#options \\011KGDB_DEVNAME=\"\\134\"com\\134\"\",KGDB_DEVADDR=0x3f8,KGDB_DEVRATE=9600\n"
"_CFG_#makeoptions\\011DEBUG=\"-g\"\\011# compile full symbol table\n"
"_CFG_#options \\011SYSCALL_STATS\\011# per syscall counts\n"
"_CFG_#options \\011SYSCALL_TIMES\\011# per syscall times\n"
"_CFG_#options \\011SYSCALL_TIMES_HASCOUNTER\\011# use 'broken' rdtsc (soekris)\n"
"_CFG_\n"
"_CFG_# Compatibility options\n"
"_CFG_options \\011COMPAT_15\\011# compatibility with NetBSD 1.5,\n"
"_CFG_options \\011COMPAT_16\\011# NetBSD 1.6,\n"
"_CFG_options \\011COMPAT_20\\011# NetBSD 2.0,\n"
"_CFG_options \\011COMPAT_30\\011# NetBSD 3.0,\n"
"_CFG_options \\011COMPAT_40\\011# NetBSD 4.0,\n"
"_CFG_options \\011COMPAT_50\\011# NetBSD 5.0,\n"
"_CFG_options \\011COMPAT_60\\011# NetBSD 6.0 compatibility.\n"
"_CFG_options \\011COMPAT_43\\011# and 4.3BSD\n"
"_CFG_#options \\011COMPAT_386BSD_MBRPART # recognize old partition ID\n"
"_CFG_\n"
"_CFG_options \\011COMPAT_OSSAUDIO\n"
"_CFG_options \\011COMPAT_NETBSD32\n"
"_CFG_options \\011COMPAT_LINUX\n"
"_CFG_options \\011COMPAT_LINUX32\\011# req. COMPAT_LINUX and COMPAT_NETBSD32\n"
"_CFG_options \\011EXEC_ELF32\n"
"_CFG_options \\011COMPAT_BSDPTY\\011# /dev/[pt]ty?? ptys.\n"
"_CFG_\n"
"_CFG_# Wedge support\n"
"_CFG_options \\011DKWEDGE_AUTODISCOVER\\011# Automatically add dk(4) instances\n"
"_CFG_options \\011DKWEDGE_METHOD_GPT\\011# Supports GPT partitions as wedges\n"
"_CFG_# The following three options can break /etc/fstab, so handle with care\n"
"_CFG_#options \\011DKWEDGE_METHOD_BSDLABEL\\011# Support disklabel entries as wedges\n"
"_CFG_#options \\011DKWEDGE_METHOD_MBR\\011# Support MBR partitions as wedges\n"
"_CFG_#options\\011DKWEDGE_METHOD_APPLE    # Support Apple partitions as wedges\n"
"_CFG_\n"
"_CFG_# File systems\n"
"_CFG_file-system \\011FFS\\011\\011# UFS\n"
"_CFG_file-system\\011MFS\\011\\011# memory file system\n"
"_CFG_file-system \\011NFS\\011\\011# Network File System client\n"
"_CFG_file-system\\011TMPFS\\011\\011# Efficient memory file-system\n"
"_CFG_file-system\\011EXT2FS\\011\\011# second extended file system (linux)\n"
"_CFG_file-system\\011LFS\\011\\011# log-structured file system\n"
"_CFG_file-system\\011NTFS\\011\\011# Windows/NT file system (experimental)\n"
"_CFG_file-system\\011CD9660\\011\\011# ISO 9660 + Rock Ridge file system\n"
"_CFG_file-system\\011MSDOSFS\\011\\011# MS-DOS file system\n"
"_CFG_file-system\\011FDESC\\011\\011# /dev/fd\n"
"_CFG_file-system\\011KERNFS\\011\\011# /kern\n"
"_CFG_file-system\\011NULLFS\\011\\011# loopback file system\n"
"_CFG_file-system\\011OVERLAY\\011\\011# overlay file system\n"
"_CFG_file-system\\011PROCFS\\011\\011# /proc\n"
"_CFG_file-system\\011PUFFS\\011\\011# Userspace file systems (e.g. ntfs-3g & sshfs)\n"
"_CFG_file-system\\011SMBFS\\011\\011# experimental - CIFS; also needs nsmb (below)\n"
"_CFG_file-system\\011UMAPFS\\011\\011# NULLFS + uid and gid remapping\n"
"_CFG_file-system\\011UNION\\011\\011# union file system\n"
"_CFG_file-system\\011CODA\\011\\011# Coda File System; also needs vcoda (below)\n"
"_CFG_file-system\\011PTYFS\\011\\011# /dev/ptm support\n"
"_CFG_#file-system\\011UDF\\011\\011# experimental - OSTA UDF CD/DVD file-system\n"
"_CFG_#file-system\\011HFS\\011\\011# experimental - Apple HFS+ (read-only)\n"
"_CFG_#file-system\\011NILFS\\011\\011# experimental - NTT's NiLFS(2)\n"
"_CFG_\n"
"_CFG_# File system options\n"
"_CFG_options \\011QUOTA\\011\\011# legacy UFS quotas\n"
"_CFG_options \\011QUOTA2\\011\\011# new, in-filesystem UFS quotas\n"
"_CFG_options \\011FFS_EI\\011\\011# FFS Endian Independent support\n"
"_CFG_options \\011WAPBL\\011\\011# File system journaling support\n"
"_CFG_# Note that UFS_DIRHASH is suspected of causing kernel memory corruption.\n"
"_CFG_# It is not recommended for general use.\n"
"_CFG_#options \\011UFS_DIRHASH\\011# UFS Large Directory Hashing - Experimental\n"
"_CFG_options \\011NFSSERVER\\011# Network File System server\n"
"_CFG_#options \\011EXT2FS_SYSTEM_FLAGS # makes ext2fs file flags (append and\n"
"_CFG_\\011\\011\\011\\011# immutable) behave as system flags.\n"
"_CFG_#options \\011FFS_NO_SNAPSHOT\\011# No FFS snapshot support\n"
"_CFG_options \\011UFS_EXTATTR\\011# Extended attribute support for UFS1\n"
"_CFG_\n"
"_CFG_# Networking options\n"
"_CFG_#options \\011GATEWAY\\011\\011# packet forwarding\n"
"_CFG_options \\011INET\\011\\011# IP + ICMP + TCP + UDP\n"
"_CFG_options \\011INET6\\011\\011# IPV6\n"
"_CFG_options \\011IPSEC\\011\\011# IP security\n"
"_CFG_#options \\011IPSEC_DEBUG\\011# debug for IP security\n"
"_CFG_#options \\011MPLS\\011\\011# MultiProtocol Label Switching (needs ifmpls)\n"
"_CFG_#options \\011MROUTING\\011# IP multicast routing\n"
"_CFG_#options \\011PIM\\011\\011# Protocol Independent Multicast\n"
"_CFG_options \\011NETATALK\\011# AppleTalk networking protocols\n"
"_CFG_options \\011PPP_BSDCOMP\\011# BSD-Compress compression support for PPP\n"
"_CFG_options \\011PPP_DEFLATE\\011# Deflate compression support for PPP\n"
"_CFG_options \\011PPP_FILTER\\011# Active filter support for PPP (requires bpf)\n"
"_CFG_options \\011IPFILTER_LOG\\011# ipmon(8) log support\n"
"_CFG_options \\011IPFILTER_LOOKUP\\011# ippool(8) support\n"
"_CFG_options \\011IPFILTER_COMPAT # Compat for IP-Filter\n"
"_CFG_#options \\011IPFILTER_DEFAULT_BLOCK\\011# block all packets by default\n"
"_CFG_#options \\011TCP_DEBUG\\011# Record last TCP_NDEBUG packets with SO_DEBUG\n"
"_CFG_\n"
"_CFG_#options \\011ALTQ\\011\\011# Manipulate network interfaces' output queues\n"
"_CFG_#options \\011ALTQ_BLUE\\011# Stochastic Fair Blue\n"
"_CFG_#options \\011ALTQ_CBQ\\011# Class-Based Queueing\n"
"_CFG_#options \\011ALTQ_CDNR\\011# Diffserv Traffic Conditioner\n"
"_CFG_#options \\011ALTQ_FIFOQ\\011# First-In First-Out Queue\n"
"_CFG_#options \\011ALTQ_FLOWVALVE\\011# RED/flow-valve (red-penalty-box)\n"
"_CFG_#options \\011ALTQ_HFSC\\011# Hierarchical Fair Service Curve\n"
"_CFG_#options \\011ALTQ_LOCALQ\\011# Local queueing discipline\n"
"_CFG_#options \\011ALTQ_PRIQ\\011# Priority Queueing\n"
"_CFG_#options \\011ALTQ_RED\\011# Random Early Detection\n"
"_CFG_#options \\011ALTQ_RIO\\011# RED with IN/OUT\n"
"_CFG_#options \\011ALTQ_WFQ\\011# Weighted Fair Queueing\n"
"_CFG_\n"
"_CFG_# These options enable verbose messages for several subsystems.\n"
"_CFG_# Warning, these may compile large string tables into the kernel!\n"
"_CFG_#options \\011ACPIVERBOSE\\011# verbose ACPI configuration messages\n"
"_CFG_#options \\011MIIVERBOSE\\011# verbose PHY autoconfig messages\n"
"_CFG_#options \\011PCIVERBOSE\\011# verbose PCI device autoconfig messages\n"
"_CFG_#options \\011PCI_CONFIG_DUMP\\011# verbosely dump PCI config space\n"
"_CFG_#options \\011PCMCIAVERBOSE\\011# verbose PCMCIA configuration messages\n"
"_CFG_options \\011SCSIVERBOSE\\011# human readable SCSI error messages\n"
"_CFG_#options \\011USBVERBOSE\\011# verbose USB device autoconfig messages\n"
"_CFG_\n"
"_CFG_options \\011NFS_BOOT_DHCP,NFS_BOOT_BOOTPARAM\n"
"_CFG_\n"
"_CFG_#\n"
"_CFG_# wscons options\n"
"_CFG_#\n"
"_CFG_# builtin terminal emulations\n"
"_CFG_#options \\011WSEMUL_SUN\\011\\011# sun terminal emulation\n"
"_CFG_options \\011WSEMUL_VT100\\011\\011# VT100 / VT220 emulation\n"
"_CFG_# different kernel output - see dev/wscons/wsdisplayvar.h\n"
"_CFG_options \\011WS_KERNEL_FG=WSCOL_GREEN\n"
"_CFG_#options \\011WS_KERNEL_BG=WSCOL_BLACK\n"
"_CFG_# compatibility to other console drivers\n"
"_CFG_options \\011WSDISPLAY_COMPAT_PCVT\\011\\011# emulate some ioctls\n"
"_CFG_options \\011WSDISPLAY_COMPAT_SYSCONS\\011# emulate some ioctls\n"
"_CFG_options \\011WSDISPLAY_COMPAT_USL\\011\\011# wsconscfg VT handling\n"
"_CFG_options \\011WSDISPLAY_COMPAT_RAWKBD\\011\\011# can get raw scancodes\n"
"_CFG_# don't attach pckbd as the console if no PS/2 keyboard is found\n"
"_CFG_options \\011PCKBD_CNATTACH_MAY_FAIL\n"
"_CFG_# see dev/pckbport/wskbdmap_mfii.c for implemented layouts\n"
"_CFG_#options \\011PCKBD_LAYOUT=\"(KB_DE | KB_NODEAD)\"\n"
"_CFG_# allocate a number of virtual screens at autoconfiguration time\n"
"_CFG_#options \\011WSDISPLAY_DEFAULTSCREENS=4\n"
"_CFG_# use a large software cursor that doesn't blink\n"
"_CFG_options \\011PCDISPLAY_SOFTCURSOR\n"
"_CFG_# modify the screen type of the console; defaults to \"80x25\"\n"
"_CFG_#options \\011VGA_CONSOLE_SCREENTYPE=\"\\134\"80x24\\134\"\"\n"
"_CFG_# work around a hardware bug that loaded fonts don't work; found on ATI cards\n"
"_CFG_#options \\011VGA_CONSOLE_ATI_BROKEN_FONTSEL\n"
"_CFG_# console scrolling support.\n"
"_CFG_options \\011WSDISPLAY_SCROLLSUPPORT\n"
"_CFG_# enable VGA raster mode capable of displaying multilingual text on console\n"
"_CFG_#options \\011VGA_RASTERCONSOLE\n"
"_CFG_# enable splash screen support; requires genfb or radeonfb\n"
"_CFG_#options \\011SPLASHSCREEN\n"
"_CFG_\n"
"_CFG_# Kernel root file system and dump configuration.\n"
"_CFG_config\\011\\011netbsd\\011root on ? type ?\n"
"_CFG_#config\\011\\011netbsd\\011root on sd0a type ffs\n"
"_CFG_#config\\011\\011netbsd\\011root on ? type nfs\n"
"_CFG_\n"
"_CFG_#\n"
"_CFG_# Device configuration\n"
"_CFG_#\n"
"_CFG_\n"
"_CFG_#IPMI support\n"
"_CFG_ipmi0\\011\\011at mainbus?\n"
"_CFG_\n"
"_CFG_# ACPI will be used if present. If not it will fall back to MPBIOS\n"
"_CFG_acpi0\\011\\011at mainbus0\n"
"_CFG_options \\011ACPI_SCANPCI\\011\\011# find PCI roots using ACPI\n"
"_CFG_options \\011MPBIOS\\011\\011\\011# configure CPUs and APICs using MPBIOS\n"
"_CFG_options \\011MPBIOS_SCANPCI\\011\\011# MPBIOS configures PCI roots\n"
"_CFG_#options \\011PCI_INTR_FIXUP\\011\\011# PCI interrupt routing via ACPI\n"
"_CFG_#options \\011PCI_BUS_FIXUP\\011\\011# fixup PCI bus numbering\n"
"_CFG_#options \\011PCI_ADDR_FIXUP\\011\\011# fixup PCI I/O addresses\n"
"_CFG_#options \\011ACPI_ACTIVATE_DEV\\011# If set, activate inactive devices\n"
"_CFG_options \\011VGA_POST\\011\\011# in-kernel support for VGA POST\n"
"_CFG_\n"
"_CFG_# ACPI devices\n"
"_CFG_acpiacad*\\011at acpi?\\011\\011# ACPI AC Adapter\n"
"_CFG_acpibat*\\011at acpi?\\011\\011# ACPI Battery\n"
"_CFG_acpibut*\\011at acpi?\\011\\011# ACPI Button\n"
"_CFG_acpidalb*\\011at acpi?\\011\\011# Direct Application Launch Button\n"
"_CFG_acpiec* \\011at acpi?\\011\\011# ACPI Embedded Controller (late)\n"
"_CFG_acpiecdt*\\011at acpi?\\011\\011# ACPI Embedded Controller (early)\n"
"_CFG_acpifan*\\011at acpi?\\011\\011# ACPI Fan\n"
"_CFG_acpilid*\\011at acpi?\\011\\011# ACPI Lid Switch\n"
"_CFG_#acpipmtr*\\011at acpi?\\011\\011# ACPI Power Meter (experimental)\n"
"_CFG_#acpismbus*\\011at acpi?\\011\\011# ACPI SMBus CMI (experimental)\n"
"_CFG_acpitz* \\011at acpi?\\011\\011# ACPI Thermal Zone\n"
"_CFG_acpivga*\\011at acpi?\\011\\011# ACPI Display Adapter\n"
"_CFG_acpiout*\\011at acpivga?\\011\\011# ACPI Display Output Device\n"
"_CFG_acpiwdrt*\\011at acpi?\\011\\011# ACPI Watchdog Resource Table\n"
"_CFG_acpiwmi*\\011at acpi?\\011\\011# ACPI WMI Mapper\n"
"_CFG_\n"
"_CFG_# Mainboard devices\n"
"_CFG_aibs*\\011\\011at acpi?\\011\\011# ASUSTeK AI Booster hardware monitor\n"
"_CFG_asus*\\011\\011at acpi?\\011\\011# ASUS hotkeys\n"
"_CFG_attimer*\\011at acpi?\\011\\011# AT Timer\n"
"_CFG_#com*\\011\\011at acpi?\\011\\011# Serial communications interface\n"
"_CFG_#fdc*\\011\\011at acpi?\\011\\011# Floppy disk controller\n"
"_CFG_fujbp*\\011\\011at acpi?\\011\\011# Fujitsu Brightness & Pointer\n"
"_CFG_fujhk*\\011\\011at acpi?\\011\\011# Fujitsu Hotkeys\n"
"_CFG_#hpacel*\\011at acpi?\\011\\011# HP 3D DriveGuard accelerometer\n"
"_CFG_#hpqlb*\\011\\011at acpi?\\011\\011# HP Quick Launch Buttons\n"
"_CFG_hpet*\\011\\011at acpihpetbus?\\011\\011# High Precision Event Timer (table)\n"
"_CFG_hpet*\\011\\011at acpinodebus?\\011\\011# High Precision Event Timer (device)\n"
"_CFG_joy*\\011\\011at acpi?\\011\\011# Joystick/Game port\n"
"_CFG_#lpt*\\011\\011at acpi?\\011\\011# Parallel port\n"
"_CFG_mpu*\\011\\011at acpi?\\011\\011# Roland MPU-401 MIDI UART\n"
"_CFG_pckbc*\\011\\011at acpi?\\011\\011# PC keyboard controller\n"
"_CFG_pcppi*\\011\\011at acpi?\\011\\011# AT-style speaker sound\n"
"_CFG_sony*\\011\\011at acpi?\\011\\011# Sony Notebook Controller\n"
"_CFG_spic*\\011\\011at acpi?\\011\\011# Sony Programmable I/O Controller\n"
"_CFG_wsmouse*\\011at spic?\\011\\011# mouse\n"
"_CFG_thinkpad*\\011at acpi?\\011\\011# IBM/Lenovo Thinkpad hotkeys\n"
"_CFG_#tpm*\\011\\011at acpi?\\011\\011# ACPI TPM (Experimental)\n"
"_CFG_ug*\\011\\011at acpi?\\011\\011# Abit uGuru Hardware monitor\n"
"_CFG_wb*\\011\\011at acpi?\\011\\011# Winbond W83L518D SD/MMC reader\n"
"_CFG_sdmmc*\\011\\011at wb?\\011\\011\\011# SD/MMC bus\n"
"_CFG_wmidell*\\011at acpiwmibus?\\011\\011# Dell WMI mappings\n"
"_CFG_wmieeepc*\\011at acpiwmibus?\\011\\011# Asus Eee PC WMI mappings\n"
"_CFG_wmihp*\\011\\011at acpiwmibus?\\011\\011# HP WMI mappings\n"
"_CFG_wmimsi* \\011at acpiwmibus?\\011\\011# MSI WMI mappings\n"
"_CFG_\n"
"_CFG_# Basic Bus Support\n"
"_CFG_\n"
"_CFG_# PCI bus support\n"
"_CFG_pci*\\011at mainbus? bus ?\n"
"_CFG_pci*\\011at pchb? bus ?\n"
"_CFG_pci*\\011at ppb? bus ?\n"
"_CFG_\n"
"_CFG_# PCI bridges\n"
"_CFG_pchb*\\011at pci? dev ? function ?\\011# PCI-Host bridges\n"
"_CFG_pcib*\\011at pci? dev ? function ?\\011# PCI-ISA bridges\n"
"_CFG_ppb*\\011at pci? dev ? function ?\\011# PCI-PCI bridges\n"
"_CFG_# XXX 'puc's aren't really bridges, but there's no better place for them here\n"
"_CFG_puc*\\011at pci? dev ? function ?\\011# PCI \"universal\" comm. cards\n"
"_CFG_\n"
"_CFG_amdpcib* at pci? dev ? function ?\\011# AMD 8111 PCI-ISA w/ HPET\n"
"_CFG_hpet*\\011at amdpcib?\n"
"_CFG_\n"
"_CFG_pwdog*\\011at pci? dev ? function ?\\011# QUANCOM PWDOG1\n"
"_CFG_\n"
"_CFG_ichlpcib* at pci? dev ? function ?\\011# Intel ICH PCI-LPC w/ timecounter,\n"
"_CFG_\\011\\011\\011\\011\\011# watchdog and Speedstep and HPET\n"
"_CFG_fwhrng* at ichlpcib?\\011\\011# Intel 82802 FWH Random Number Generator\n"
"_CFG_hpet*\\011at ichlpcib?\n"
"_CFG_\n"
"_CFG_aapic*\\011at pci? dev ? function ?\\011# AMD 8131 IO apic\n"
"_CFG_\n"
"_CFG_agp*\\011at pchb?\n"
"_CFG_\n"
"_CFG_# ISA bus support\n"
"_CFG_isa0\\011at mainbus?\n"
"_CFG_isa0\\011at pcib?\n"
"_CFG_#isa0\\011at amdpcib?\n"
"_CFG_isa0\\011at ichlpcib?\n"
"_CFG_\n"
"_CFG_# CardBus bridge support\n"
"_CFG_cbb*\\011\\011at pci? dev ? function ?\n"
"_CFG_cardslot*\\011at cbb?\n"
"_CFG_\n"
"_CFG_# CardBus bus support\n"
"_CFG_cardbus*\\011at cardslot?\n"
"_CFG_pcmcia* \\011at cardslot?\n"
"_CFG_\n"
"_CFG_# Console Devices\n"
"_CFG_\n"
"_CFG_# wscons\n"
"_CFG_pckbc0\\011\\011at isa?\\011\\011\\011# pc keyboard controller\n"
"_CFG_pckbd*\\011\\011at pckbc?\\011\\011# PC keyboard\n"
"_CFG_pms*\\011\\011at pckbc?\\011\\011# PS/2 mouse for wsmouse\n"
"_CFG_#options \\011PMS_DISABLE_POWERHOOK\\011# Disable PS/2 reset on resume\n"
"_CFG_options \\011PMS_SYNAPTICS_TOUCHPAD\\011# Enable support for Synaptics Touchpads\n"
"_CFG_options \\011PMS_ELANTECH_TOUCHPAD\\011# Enable support for Elantech Touchpads\n"
"_CFG_vga*\\011\\011at pci? dev ? function ?\n"
"_CFG_genfb*\\011\\011at pci? dev ? function ?\n"
"_CFG_options \\011VCONS_DRAW_INTR\n"
"_CFG_wsdisplay*\\011at vga? console ?\n"
"_CFG_wsdisplay*\\011at wsemuldisplaydev?\n"
"_CFG_wskbd*\\011\\011at pckbd? console ?\n"
"_CFG_wsmouse*\\011at pms? mux 0\n"
"_CFG_\n"
"_CFG_attimer0\\011at isa?\n"
"_CFG_pcppi0\\011\\011at isa?\n"
"_CFG_sysbeep0\\011at pcppi?\n"
"_CFG_\n"
"_CFG_# DRI legacy drivers\n"
"_CFG_#i915drm*\\011at drm?\\011\\011# Intel i915, i945 DRM driver\n"
"_CFG_#mach64drm*\\011at drm?\\011\\011# mach64 (3D Rage Pro, Rage) DRM driver\n"
"_CFG_#mgadrm* \\011at drm?\\011\\011# Matrox G[24]00, G[45]50 DRM driver\n"
"_CFG_#r128drm*\\011at drm?\\011\\011# ATI Rage 128 DRM driver\n"
"_CFG_#radeondrm*\\011at drm?\\011\\011# ATI Radeon DRM driver\n"
"_CFG_#savagedrm*\\011at drm?\\011\\011# S3 Savage DRM driver\n"
"_CFG_#sisdrm* \\011at drm?\\011\\011# SiS DRM driver\n"
"_CFG_#tdfxdrm*\\011at drm?\\011\\011# 3dfx (voodoo) DRM driver\n"
"_CFG_#viadrm*\\011\\011at drm?\\011\\011# VIA DRM driver\n"
"_CFG_\n"
"_CFG_# DRMKMS drivers\n"
"_CFG_i915drmkms* \\011at pci? dev ? function ?\n"
"_CFG_intelfb* \\011at intelfbbus?\n"
"_CFG_\n"
"_CFG_radeon* \\011at pci? dev ? function ?\n"
"_CFG_radeondrmkmsfb* at radeonfbbus?\n"
"_CFG_\n"
"_CFG_#nouveau* \\011at pci? dev ? function ?\n"
"_CFG_#nouveaufb* \\011at nouveaufbbus?\n"
"_CFG_\n"
"_CFG_# Cryptographic Devices\n"
"_CFG_\n"
"_CFG_# PCI cryptographic devices\n"
"_CFG_hifn*\\011at pci? dev ? function ?\\011# Hifn 7755/7811/795x\n"
"_CFG_ubsec*\\011at pci? dev ? function ?\\011# Broadcom 5501/5601/580x/582x\n"
"_CFG_\n"
"_CFG_# Trusted Platform Module\n"
"_CFG_tpm*   at isa? iomem 0xfed40000 irq 7\n"
"_CFG_#tpm*  at isa? port 0x02e\n"
"_CFG_#tpm*  at isa? port 0x04e \n"
"_CFG_#tpm*  at isa? port 0x07e \n"
"_CFG_#tpm*  at isa? port 0x0ee\n"
"_CFG_\n"
"_CFG_# Serial Devices\n"
"_CFG_\n"
"_CFG_# PCI serial interfaces\n"
"_CFG_com*\\011at puc? port ?\\011\\011\\011# 16x50s on \"universal\" comm boards\n"
"_CFG_cy*\\011at pci? dev ? function ?\\011# Cyclades Cyclom-Y serial boards\n"
"_CFG_cz*\\011at pci? dev ? function ?\\011# Cyclades-Z multi-port serial boards\n"
"_CFG_\n"
"_CFG_# PCMCIA serial interfaces\n"
"_CFG_com*\\011at pcmcia? function ?\\011\\011# Modems and serial cards\n"
"_CFG_\n"
"_CFG_pcmcom* at pcmcia? function ?\\011\\011# PCMCIA multi-port serial cards\n"
"_CFG_com*\\011at pcmcom? slave ?\\011\\011# ...and the slave devices\n"
"_CFG_\n"
"_CFG_# CardBus serial interfaces\n"
"_CFG_com*\\011at cardbus? function ?\\011# Modems and serial cards\n"
"_CFG_\n"
"_CFG_# ISA serial interfaces\n"
"_CFG_#options \\011COM_HAYESP\\011\\011# adds Hayes ESP serial board support\n"
"_CFG_com0\\011at isa? port 0x3f8 irq 4\\011# Standard PC serial ports\n"
"_CFG_com1\\011at isa? port 0x2f8 irq 3\n"
"_CFG_\n"
"_CFG_# Parallel Printer Interfaces\n"
"_CFG_\n"
"_CFG_# PCI parallel printer interfaces\n"
"_CFG_lpt*\\011at puc? port ?\\011\\011\\011# || ports on \"universal\" comm boards\n"
"_CFG_\n"
"_CFG_# ISA parallel printer interfaces\n"
"_CFG_lpt0\\011at isa? port 0x378 irq 7\\011# standard PC parallel ports\n"
"_CFG_lpt1\\011at isa? port 0x278\n"
"_CFG_\n"
"_CFG_# Hardware monitors\n"
"_CFG_\n"
"_CFG_amdnb_misc* at pci?\\011\\011\\011# AMD NB Misc Configuration\n"
"_CFG_amdtemp* at amdnb_misc?\\011\\011\\011# AMD CPU Temperature sensors\n"
"_CFG_\n"
"_CFG_# Winbond LPC Super I/O\n"
"_CFG_#wbsio*\\011at isa? port 0x2e\n"
"_CFG_#wbsio*\\011at isa? port 0x4e\n"
"_CFG_\n"
"_CFG_# IBM Hawk Integrated Systems Management Processor\n"
"_CFG_#ibmhawk0\\011at iic? addr 0x37\n"
"_CFG_\n"
"_CFG_# LM7[89] and compatible hardware monitors\n"
"_CFG_# Use flags to select temp sensor type (see lm(4) man page for details)\n"
"_CFG_#lm0\\011at isa?\\011port 0x290 flags 0x0\\011# other common ports: 0x280, 0x310\n"
"_CFG_#lm*\\011at wbsio?\n"
"_CFG_\n"
"_CFG_# SMSC LPC47B397 hardware monitor functions\n"
"_CFG_#smsc0\\011at isa? port 0x02e\n"
"_CFG_\n"
"_CFG_# SMSC LPC47M192 hardware monitor\n"
"_CFG_#smscmon*\\011at iic? addr 0x2c\n"
"_CFG_#smscmon*\\011at iic? addr 0x2d\\011# (alternate address)\n"
"_CFG_\n"
"_CFG_# AMD 768 and 8111 power/ACPI controllers\n"
"_CFG_amdpm*\\011at pci? dev ? function ?\\011# RNG and SMBus 1.0 interface\n"
"_CFG_#iic*\\011at amdpm?\\011\\011\\011# sensors below are on this bus\n"
"_CFG_\n"
"_CFG_# NVIDIA nForce2/3/4 SMBus controller\n"
"_CFG_nfsmbc* at pci? dev ? function ?\n"
"_CFG_nfsmb*\\011at nfsmbc?\n"
"_CFG_iic*\\011at nfsmb?\n"
"_CFG_\n"
"_CFG_# Intel PIIX4 power management controllers\n"
"_CFG_piixpm* at pci? dev ? function ?\\011# PIIX4 compatible PM controller\n"
"_CFG_iic*\\011at piixpm?\\011\\011\\011# SMBus on PIIX4\n"
"_CFG_\n"
"_CFG_# Intel ICH SMBus controller\n"
"_CFG_ichsmb* at pci? dev ? function ?\n"
"_CFG_iic*\\011at ichsmb?\n"
"_CFG_\n"
"_CFG_# Thermal monitor and fan controller\n"
"_CFG_#dbcool* at iic? addr 0x2C\\011\\011# Unknown other motherboard(s)\n"
"_CFG_#dbcool* at iic? addr 0x2D\\011\\011# Tyan S2881\n"
"_CFG_#dbcool* at iic? addr 0x2E\\011\\011# Tyan S2882-D\n"
"_CFG_\n"
"_CFG_# IBM Thinkpad Active Protection System\n"
"_CFG_#aps0\\011at isa? port 0x1600\n"
"_CFG_\n"
"_CFG_# Fintek Super I/O with hardware monitor\n"
"_CFG_#finsio0 \\011at isa? port 0x4e\n"
"_CFG_\n"
"_CFG_# iTE IT87xxF Super I/O with watchdog and sensors support\n"
"_CFG_#itesio0 \\011at isa? port 0x2e\n"
"_CFG_\n"
"_CFG_# Abit uGuru Hardware system monitor\n"
"_CFG_#ug0\\011at isa? port 0xe0\n"
"_CFG_\n"
"_CFG_# Serial Presence Detect capable memory modules\n"
"_CFG_#spdmem* at iic? addr 0x50\n"
"_CFG_#spdmem* at iic? addr 0x51\n"
"_CFG_#spdmem* at iic? addr 0x52\n"
"_CFG_#spdmem* at iic? addr 0x53\n"
"_CFG_#spdmem* at iic? addr 0x54\n"
"_CFG_#spdmem* at iic? addr 0x55\n"
"_CFG_#spdmem* at iic? addr 0x56\n"
"_CFG_#spdmem* at iic? addr 0x57\n"
"_CFG_#sdtemp* at iic? addr 0x18\n"
"_CFG_#sdtemp* at iic? addr 0x19\n"
"_CFG_#sdtemp* at iic? addr 0x1a\n"
"_CFG_#sdtemp* at iic? addr 0x1b\n"
"_CFG_#sdtemp* at iic? addr 0x1c\n"
"_CFG_#sdtemp* at iic? addr 0x1d\n"
"_CFG_#sdtemp* at iic? addr 0x1e\n"
"_CFG_#sdtemp* at iic? addr 0x1f\n"
"_CFG_\n"
"_CFG_# I2O devices\n"
"_CFG_iop*\\011at pci? dev ? function ?\\011# I/O processor\n"
"_CFG_iopsp*\\011at iop? tid ?\\011\\011\\011# SCSI/FC-AL ports\n"
"_CFG_ld*\\011at iop? tid ?\\011\\011\\011# block d/\\^?evices\n"
"_CFG_# XXX dpti.c wants a processor type that is not assigned for x86-64\n"
"_CFG_#dpti*\\011at iop? tid 0\\011\\011\\011# DPT/Adaptec control interface\n"
"_CFG_\n"
"_CFG_# GPIO devices\n"
"_CFG_#gpio*\\011\\011at gpiobus?\n"
"_CFG_#gpioow*\\011at gpio?\n"
"_CFG_#onewire*\\011at gpioow?\n"
"_CFG_\n"
"_CFG_# 1- Wire support\n"
"_CFG_#gpioow*\\011at gpio? offset ? mask ?\\011# 1-wire bitbanging via gpio\n"
"_CFG_#gpioow*\\011at gpio?\n"
"_CFG_#onewire*\\011at gpioow?\n"
"_CFG_\n"
"_CFG_# I2C support\n"
"_CFG_#gpioiic*\\011at gpio?\n"
"_CFG_#iic*\\011\\011at gpioiic?\n"
"_CFG_\n"
"_CFG_# Keylock support\n"
"_CFG_#gpiolock*\\011at gpio?\n"
"_CFG_\n"
"_CFG_# Pulsing GPIO pins in software\n"
"_CFG_#gpiopwm*\\011at gpio?\n"
"_CFG_\n"
"_CFG_# Soekris 6501 GPIO/LED driver (provides gpiobus, needs gpio)\n"
"_CFG_#soekrisgpio0\\011at isa? port 0x680\n"
"_CFG_\n"
"_CFG_# SCSI Controllers and Devices\n"
"_CFG_\n"
"_CFG_# PCI SCSI controllers\n"
"_CFG_adv*\\011at pci? dev ? function ?\\011# AdvanSys 1200[A,B], 9xx[U,UA] SCSI\n"
"_CFG_adw*\\011at pci? dev ? function ?\\011# AdvanSys 9x0UW[D], 3940U[2,3]W SCSI\n"
"_CFG_ahc*\\011at pci? dev ? function ?\\011# Adaptec [23]94x, aic78x0 SCSI\n"
"_CFG_ahd*\\011at pci? dev ? function ?\\011# Adaptec aic790x SCSI\n"
"_CFG_bha*\\011at pci? dev ? function ?\\011# BusLogic 9xx SCSI\n"
"_CFG_dpt*\\011at pci? dev ? function ?\\011# DPT SmartCache/SmartRAID\n"
"_CFG_iha*\\011at pci? dev ? function ?\\011# Initio INIC-940/950 SCSI\n"
"_CFG_isp*\\011at pci? dev ? function ?\\011# Qlogic ISP [12]0x0 SCSI/FibreChannel\n"
"_CFG_mfi*\\011at pci? dev ? function ?\\011# LSI MegaRAID SAS\n"
"_CFG_mly*\\011at pci? dev ? function ?\\011# Mylex AcceleRAID and eXtremeRAID\n"
"_CFG_mpt*\\011at pci? dev ? function ?\\011# LSILogic 9x9 and 53c1030 (Fusion-MPT)\n"
"_CFG_mpii*\\011at pci? dev ? function ?\\011# LSI Logic Fusion-MPT II\n"
"_CFG_pcscp*\\011at pci? dev ? function ?\\011# AMD 53c974 PCscsi-PCI SCSI\n"
"_CFG_siop*\\011at pci? dev ? function ?\\011# Symbios 53c8xx SCSI\n"
"_CFG_esiop*\\011at pci? dev ? function ?\\011# Symbios 53c875 and newer SCSI\n"
"_CFG_#options \\011SIOP_SYMLED\\011\\011# drive the act. LED in software\n"
"_CFG_trm*\\011at pci? dev ? function ?\\011# Tekram DC-395U/UW/F, DC-315/U SCSI\n"
"_CFG_\n"
"_CFG_# PCMCIA SCSI controllers\n"
"_CFG_aic*\\011at pcmcia? function ?\\011\\011# Adaptec APA-1460 SCSI\n"
"_CFG_esp*\\011at pcmcia? function ?\\011\\011# Qlogic ESP406/FAS408 SCSI\n"
"_CFG_spc*\\011at pcmcia? function ?\\011\\011# Fujitsu MB87030/MB89352 SCSI\n"
"_CFG_\n"
"_CFG_# CardBus SCSI cards\n"
"_CFG_adv*\\011at cardbus? function ?\\011# AdvanSys 1200[A,B], 9xx[U,UA] SCSI\n"
"_CFG_ahc*\\011at cardbus? function ?\\011# Adaptec ADP-1480\n"
"_CFG_\n"
"_CFG_# SCSI bus support\n"
"_CFG_scsibus* at scsi?\n"
"_CFG_\n"
"_CFG_# SCSI devices\n"
"_CFG_sd*\\011at scsibus? target ? lun ?\\011# SCSI disk drives\n"
"_CFG_st*\\011at scsibus? target ? lun ?\\011# SCSI tape drives\n"
"_CFG_cd*\\011at scsibus? target ? lun ?\\011# SCSI CD-ROM drives\n"
"_CFG_ch*\\011at scsibus? target ? lun ?\\011# SCSI autochangers\n"
"_CFG_ses*\\011at scsibus? target ? lun ?\\011# SCSI Enclosure Services devices\n"
"_CFG_ss*\\011at scsibus? target ? lun ?\\011# SCSI scanners\n"
"_CFG_uk*\\011at scsibus? target ? lun ?\\011# SCSI unknown\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# RAID controllers and devices\n"
"_CFG_aac*\\011at pci? dev ? function ?\\011# Adaptec AAC family\n"
"_CFG_amr*\\011at pci? dev ? function ?\\011# AMI/LSI Logic MegaRAID\n"
"_CFG_arcmsr* at pci? dev ? function ?\\011# Areca SATA RAID controllers\n"
"_CFG_cac*\\011at pci? dev ? function ?\\011# Compaq PCI array controllers\n"
"_CFG_ciss*\\011at pci? dev ? function ?\\011# HP Smart Array controllers\n"
"_CFG_icp*\\011at pci? dev ? function ?\\011# ICP-Vortex GDT & Intel RAID\n"
"_CFG_mlx*\\011at pci? dev ? function ?\\011# Mylex DAC960 & DEC SWXCR family\n"
"_CFG_twe*\\011at pci? dev ? function ?\\011# 3ware Escalade RAID controllers\n"
"_CFG_twa*\\011at pci? dev ? function ?\\011# 3ware Escalade 9xxx RAID controllers\n"
"_CFG_\n"
"_CFG_ld*\\011at aac? unit ?\n"
"_CFG_ld*\\011at amr? unit ?\n"
"_CFG_ld*\\011at cac? unit ?\n"
"_CFG_ld*\\011at icp? unit ?\n"
"_CFG_ld*\\011at twe? unit ?\n"
"_CFG_ld*\\011at twa? unit ?\n"
"_CFG_ld*\\011at mlx? unit ?\n"
"_CFG_\n"
"_CFG_icpsp*\\011at icp? unit ?\\011\\011\\011# SCSI pass-through\n"
"_CFG_\n"
"_CFG_# IDE and related devices\n"
"_CFG_# PCI IDE controllers - see pciide(4) for supported hardware.\n"
"_CFG_# The 0x0001 flag force the driver to use DMA, even if the driver doesn't know\n"
"_CFG_# how to set up DMA modes for this chip. This may work, or may cause\n"
"_CFG_# a machine hang with some controllers.\n"
"_CFG_pciide* at pci? dev ? function ? flags 0x0000\\011# GENERIC pciide driver\n"
"_CFG_acardide* at pci? dev ? function ?\\011# Acard IDE controllers\n"
"_CFG_aceride* at pci? dev ? function ?\\011# Acer Lab IDE controllers\n"
"_CFG_ahcisata* at pci? dev ? function ?\\011# AHCI SATA controllers\n"
"_CFG_artsata* at pci? dev ? function ?\\011# Intel i31244 SATA controller\n"
"_CFG_cmdide* at pci? dev ? function ?\\011# CMD tech IDE controllers\n"
"_CFG_cypide* at pci? dev ? function ?\\011# Cypress IDE controllers\n"
"_CFG_hptide* at pci? dev ? function ?\\011# Triones/HighPoint IDE controllers\n"
"_CFG_iteide* at pci? dev ? function ?\\011# IT Express IDE controllers\n"
"_CFG_ixpide* at pci? dev ? function ?\\011# ATI IXP IDE controllers\n"
"_CFG_jmide*\\011at pci? dev ? function ?\\011# JMicron PCI-e PATA/SATA controllers\n"
"_CFG_ahcisata* at jmide?\n"
"_CFG_mvsata* at pci? dev ? function ?\\011# Marvell Hercules-I/II\n"
"_CFG_optiide* at pci? dev ? function ?\\011# Opti IDE controllers\n"
"_CFG_piixide* at pci? dev ? function ?\\011# Intel IDE controllers\n"
"_CFG_pdcide* at pci? dev ? function ?\\011# Promise IDE controllers\n"
"_CFG_pdcsata* at pci? dev ? function ?\\011# Promise SATA150 controllers\n"
"_CFG_satalink* at pci? dev ? function ?\\011# SiI SATALink controllers\n"
"_CFG_siisata* at pci? dev ? function ?\\011# SiI SteelVine controllers\n"
"_CFG_siside* at pci? dev ? function ?\\011# SiS IDE controllers\n"
"_CFG_slide*\\011at pci? dev ? function ?\\011# Symphony Labs IDE controllers\n"
"_CFG_svwsata* at pci? dev ? function ?\\011# ServerWorks SATA controllers\n"
"_CFG_toshide* at pci? dev ? function ?\\011# TOSHIBA PICCOLO controllers\n"
"_CFG_viaide* at pci? dev ? function ?\\011# VIA/AMD/Nvidia IDE controllers\n"
"_CFG_\n"
"_CFG_# PCMCIA IDE controllers\n"
"_CFG_wdc*\\011at pcmcia? function ?\n"
"_CFG_\n"
"_CFG_# CardBus IDE controllers\n"
"_CFG_njata*\\011at cardbus? function ? flags 0x01\\011# Workbit NinjaATA-32\n"
"_CFG_siisata* at cardbus? function ?\\011\\011# SiI SteelVine controllers\n"
"_CFG_\n"
"_CFG_# ISA ST506, ESDI, and IDE controllers\n"
"_CFG_# Use flags 0x01 if you want to try to use 32bits data I/O (the driver will\n"
"_CFG_# fall back to 16bits I/O if 32bits I/O are not functional).\n"
"_CFG_# Some controllers pass the initial 32bit test, but will fail later.\n"
"_CFG_wdc0\\011at isa? port 0x1f0 irq 14 flags 0x00\n"
"_CFG_wdc1\\011at isa? port 0x170 irq 15 flags 0x00\n"
"_CFG_\n"
"_CFG_# ATA (IDE) bus support\n"
"_CFG_atabus* at ata?\n"
"_CFG_options \\011ATADEBUG\n"
"_CFG_\n"
"_CFG_# IDE drives\n"
"_CFG_# Flags are used only with controllers that support DMA operations\n"
"_CFG_# and mode settings (e.g. some pciide controllers)\n"
"_CFG_# The lowest order four bits (rightmost digit) of the flags define the PIO\n"
"_CFG_# mode to use, the next set of four bits the DMA mode and the third set the\n"
"_CFG_# UltraDMA mode. For each set of four bits, the 3 lower bits define the mode\n"
"_CFG_# to use, and the last bit must be 1 for this setting to be used.\n"
"_CFG_# For DMA and UDMA, 0xf (1111) means 'disable'.\n"
"_CFG_# 0x0fac means 'use PIO mode 4, DMA mode 2, disable UltraDMA'.\n"
"_CFG_# (0xc=1100, 0xa=1010, 0xf=1111)\n"
"_CFG_# 0x0000 means \"use whatever the drive claims to support\".\n"
"_CFG_wd*\\011at atabus? drive ? flags 0x0000\n"
"_CFG_\n"
"_CFG_# ATAPI bus support\n"
"_CFG_atapibus* at atapi?\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# ATA RAID configuration support, as found on some Promise controllers.\n"
"_CFG_pseudo-device ataraid\n"
"_CFG_ld*\\011at ataraid? vendtype ? unit ?\n"
"_CFG_\n"
"_CFG_# ATAPI devices\n"
"_CFG_# flags have the same meaning as for IDE drives.\n"
"_CFG_cd*\\011at atapibus? drive ? flags 0x0000\\011# ATAPI CD-ROM drives\n"
"_CFG_sd*\\011at atapibus? drive ? flags 0x0000\\011# ATAPI disk drives\n"
"_CFG_st*\\011at atapibus? drive ? flags 0x0000\\011# ATAPI tape drives\n"
"_CFG_uk*\\011at atapibus? drive ? flags 0x0000\\011# ATAPI unknown\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# Miscellaneous mass storage devices\n"
"_CFG_\n"
"_CFG_# ISA floppy\n"
"_CFG_fdc0\\011at isa? port 0x3f0 irq 6 drq 2\\011# standard PC floppy controllers\n"
"_CFG_#fdc1\\011at isa? port 0x370 irq ? drq ?\n"
"_CFG_fd*\\011at fdc? drive ?\\011\\011\\011# the drives themselves\n"
"_CFG_# some machines need you to do this instead of fd*\n"
"_CFG_#fd0\\011at fdc0 drive 0\n"
"_CFG_\n"
"_CFG_# Network Interfaces\n"
"_CFG_\n"
"_CFG_# PCI network interfaces\n"
"_CFG_age*\\011at pci? dev ? function ?\\011# Attansic/Atheros L1 Gigabit Ethernet\n"
"_CFG_alc*\\011at pci? dev ? function ?\\011# Attansic/Atheros L1C/L2C Ethernet\n"
"_CFG_ale*\\011at pci? dev ? function ?\\011# Attansic/Atheros L1E Ethernet\n"
"_CFG_an*\\011at pci? dev ? function ?\\011# Aironet PC4500/PC4800 (802.11)\n"
"_CFG_ath*\\011at pci? dev ? function ?\\011# Atheros 5210/5211/5212 802.11\n"
"_CFG_athn*\\011at pci? dev ? function ?\\011# Atheros AR9k (802.11a/g/n)\n"
"_CFG_atw*\\011at pci? dev ? function ?\\011# ADMtek ADM8211 (802.11)\n"
"_CFG_bce*\\011at pci? dev ? function ?\\011# Broadcom 440x 10/100 Ethernet\n"
"_CFG_bge*\\011at pci? dev ? function ?\\011# Broadcom 570x gigabit Ethernet\n"
"_CFG_bnx*\\011at pci? dev ? function ?\\011# Broadcom NetXtremeII gigabit Ethernet\n"
"_CFG_bwi*\\011at pci? dev ? function ?\\011# Broadcom BCM43xx wireless\n"
"_CFG_dge*\\011at pci? dev ? function ?\\011# Intel 82597 10GbE LR\n"
"_CFG_en*\\011at pci? dev ? function ?\\011# ENI/Adaptec ATM\n"
"_CFG_ep*\\011at pci? dev ? function ?\\011# 3Com 3c59x\n"
"_CFG_epic*\\011at pci? dev ? function ?\\011# SMC EPIC/100 Ethernet\n"
"_CFG_esh*\\011at pci? dev ? function ?\\011# Essential HIPPI card\n"
"_CFG_et*\\011at pci? dev ? function ?\\011# Agere/LSI ET1310/ET1301 Gigabit\n"
"_CFG_ex*\\011at pci? dev ? function ?\\011# 3Com 90x[BC]\n"
"_CFG_fpa*\\011at pci? dev ? function ?\\011# DEC DEFPA FDDI\n"
"_CFG_fxp*\\011at pci? dev ? function ?\\011# Intel EtherExpress PRO 10+/100B\n"
"_CFG_gsip*\\011at pci? dev ? function ?\\011# NS83820 Gigabit Ethernet\n"
"_CFG_ipw*\\011at pci? dev ? function ?\\011# Intel PRO/Wireless 2100\n"
"_CFG_iwi*\\011at pci? dev ? function ?\\011# Intel PRO/Wireless 2200BG\n"
"_CFG_iwn*\\011at pci? dev ? function ?\\011# Intel PRO/Wireless 4965AGN\n"
"_CFG_ixg*\\011at pci? dev ? function ?\\011# Intel 8259x 10 gigabit\n"
"_CFG_jme*\\011at pci? dev ? function ?\\011# JMicron JMC2[56]0 ethernet\n"
"_CFG_hme*\\011at pci? dev ? function ?\\011# Sun Microelectronics STP2002-STQ\n"
"_CFG_le*\\011at pci? dev ? function ?\\011# PCnet-PCI Ethernet\n"
"_CFG_lii*\\011at pci? dev ? function ?\\011# Atheros L2 Fast-Ethernet\n"
"_CFG_lmc*\\011at pci? dev ? function ?\\011# Lan Media Corp SSI/HSSI/DS3\n"
"_CFG_malo*\\011at pci? dev ? function ?\\011# Marvell Libertas Wireless\n"
"_CFG_mskc*\\011at pci? dev ? function ?\\011# Marvell Yukon 2 Gigabit Ethernet\n"
"_CFG_msk*\\011at mskc?\\011\\011\\011# Marvell Yukon 2 Gigabit Ethernet\n"
"_CFG_mtd*\\011at pci? dev ? function ?\\011# Myson MTD803 3-in-1 Ethernet\n"
"_CFG_ne*\\011at pci? dev ? function ?\\011# NE2000-compatible Ethernet\n"
"_CFG_nfe*\\011at pci?\\011dev ? function ?\\011# NVIDIA nForce Ethernet\n"
"_CFG_ntwoc*\\011at pci? dev ? function ?\\011# Riscom/N2 PCI Sync Serial\n"
"_CFG_pcn*\\011at pci? dev ? function ?\\011# AMD PCnet-PCI Ethernet\n"
"_CFG_ral*\\011at pci? dev ? function ?\\011# Ralink Technology RT25x0 802.11a/b/g\n"
"_CFG_re*\\011at pci? dev ? function ?\\011# Realtek 8139C+/8169/8169S/8110S\n"
"_CFG_rtk*\\011at pci? dev ? function ?\\011# Realtek 8129/8139\n"
"_CFG_rtw*\\011at pci? dev ? function ?\\011# Realtek 8180L (802.11)\n"
"_CFG_sf*\\011at pci? dev ? function ?\\011# Adaptec AIC-6915 Ethernet\n"
"_CFG_sip*\\011at pci? dev ? function ?\\011# SiS 900/DP83815 Ethernet\n"
"_CFG_skc*\\011at pci? dev ? function ?\\011# SysKonnect SK9821 Gigabit Ethernet\n"
"_CFG_sk*\\011at skc?\\011\\011\\011\\011# SysKonnect SK9821 Gigabit Ethernet\n"
"_CFG_ste*\\011at pci? dev ? function ?\\011# Sundance ST-201 Ethernet\n"
"_CFG_stge*\\011at pci? dev ? function ?\\011# Sundance/Tamarack TC9021 Gigabit\n"
"_CFG_ti*\\011at pci? dev ? function ?\\011# Alteon ACEnic gigabit Ethernet\n"
"_CFG_tl*\\011at pci? dev ? function ?\\011# ThunderLAN-based Ethernet\n"
"_CFG_tlp*\\011at pci? dev ? function ?\\011# DECchip 21x4x and clones\n"
"_CFG_txp*\\011at pci? dev ? function ?\\011# 3com 3cr990\n"
"_CFG_vge*\\011at pci? dev ? function ?\\011# VIATech VT612X Gigabit Ethernet\n"
"_CFG_vmx*\\011at pci? dev ? function ?\\011# VMware VMXNET3\n"
"_CFG_vr*\\011at pci? dev ? function ?\\011# VIA Rhine Fast Ethernet\n"
"_CFG_wi*\\011at pci? dev ? function ?\\011# Intersil Prism Mini-PCI (802.11b)\n"
"_CFG_wm*\\011at pci? dev ? function ?\\011# Intel 82543/82544 gigabit\n"
"_CFG_wpi*\\011at pci? dev ? function ?\\011# Intel PRO/Wireless 3945ABG\n"
"_CFG_xge*\\011at pci? dev ? function ?\\011# Neterion (S2io) Xframe-I 10GbE\n"
"_CFG_\n"
"_CFG_# PCMCIA network interfaces\n"
"_CFG_an*\\011at pcmcia? function ?\\011\\011# Aironet PC4500/PC4800 (802.11)\n"
"_CFG_awi*\\011at pcmcia? function ?\\011\\011# BayStack 650/660 (802.11FH/DS)\n"
"_CFG_cnw*\\011at pcmcia? function ?\\011\\011# Xircom/Netwave AirSurfer\n"
"_CFG_cs*\\011at pcmcia? function ?\\011\\011# CS89xx Ethernet\n"
"_CFG_ep*\\011at pcmcia? function ?\\011\\011# 3Com 3c589 and 3c562 Ethernet\n"
"_CFG_malo*\\011at pcmcia? function ?\\011\\011# Marvell Libertas\n"
"_CFG_mbe*\\011at pcmcia? function ?\\011\\011# MB8696x based Ethernet\n"
"_CFG_ne*\\011at pcmcia? function ?\\011\\011# NE2000-compatible Ethernet\n"
"_CFG_ray*\\011at pcmcia? function ?\\011\\011# Raytheon Raylink (802.11)\n"
"_CFG_sm*\\011at pcmcia? function ?\\011\\011# Megahertz Ethernet\n"
"_CFG_# tr at pcmcia has problems with Cardbus bridges\n"
"_CFG_#tr*\\011at pcmcia? function ?\\011\\011# TROPIC based Token-Ring\n"
"_CFG_wi*\\011at pcmcia? function ?\\011\\011# Lucent/Intersil WaveLan IEEE (802.11)\n"
"_CFG_xirc*\\011at pcmcia? function ?\\011\\011# Xircom CreditCard Ethernet\n"
"_CFG_com*\\011at xirc?\n"
"_CFG_xi*\\011at xirc?\n"
"_CFG_\n"
"_CFG_mhzc*\\011at pcmcia? function ?\\011\\011# Megahertz Ethernet/Modem combo cards\n"
"_CFG_com*\\011at mhzc?\n"
"_CFG_sm*\\011at mhzc?\n"
"_CFG_\n"
"_CFG_# CardBus network cards\n"
"_CFG_ath*\\011at cardbus? function ?\\011# Atheros 5210/5211/5212 802.11\n"
"_CFG_athn*\\011at cardbus? function ?\\011# Atheros AR9k (802.11a/g/n) - UNTESTED\n"
"_CFG_atw*\\011at cardbus? function ?\\011# ADMtek ADM8211 (802.11)\n"
"_CFG_ex*\\011at cardbus? function ?\\011# 3Com 3C575TX\n"
"_CFG_fxp*\\011at cardbus? function ?\\011# Intel i8255x\n"
"_CFG_ral*\\011at cardbus? function ?\\011# Ralink Technology RT25x0 802.11a/b/g\n"
"_CFG_re*\\011at cardbus? function ?\\011# Realtek 8139C+/8169/8169S/8110S\n"
"_CFG_rtk*\\011at cardbus? function ?\\011# Realtek 8129/8139\n"
"_CFG_rtw*\\011at cardbus? function ?\\011# Realtek 8180L (802.11)\n"
"_CFG_tlp*\\011at cardbus? function ?\\011# DECchip 21143\n"
"_CFG_\n"
"_CFG_# MII/PHY support\n"
"_CFG_acphy*\\011at mii? phy ?\\011\\011\\011# DAltima AC101 and AMD Am79c874 PHYs\n"
"_CFG_amhphy* at mii? phy ?\\011\\011\\011# AMD 79c901 Ethernet PHYs\n"
"_CFG_atphy*\\011at mii?\\011phy ?\\011\\011\\011# Attansic/Atheros PHYs\n"
"_CFG_bmtphy* at mii? phy ?\\011\\011\\011# Broadcom BCM5201 and BCM5202 PHYs\n"
"_CFG_brgphy* at mii? phy ?\\011\\011\\011# Broadcom BCM5400-family PHYs\n"
"_CFG_ciphy*\\011at mii? phy ?\\011\\011\\011# Cicada CS8201 Gig-E PHYs\n"
"_CFG_dmphy*\\011at mii? phy ?\\011\\011\\011# Davicom DM9101 PHYs\n"
"_CFG_etphy*\\011at mii? phy ?\\011\\011\\011# Agere/LSI ET1011 TruePHY Gig-E PHYs\n"
"_CFG_exphy*\\011at mii? phy ?\\011\\011\\011# 3Com internal PHYs\n"
"_CFG_gentbi* at mii? phy ?\\011\\011\\011# Generic Ten-Bit 1000BASE-[CLS]X PHYs\n"
"_CFG_glxtphy* at mii? phy ?\\011\\011\\011# Level One LXT-1000 PHYs\n"
"_CFG_gphyter* at mii? phy ?\\011\\011\\011# NS83861 Gig-E PHY\n"
"_CFG_icsphy* at mii? phy ?\\011\\011\\011# Integrated Circuit Systems ICS189x\n"
"_CFG_igphy*\\011at mii? phy ?\\011\\011\\011# Intel IGP01E1000\n"
"_CFG_ihphy*\\011at mii? phy ?\\011\\011\\011# Intel 82577 PHYs\n"
"_CFG_ikphy*\\011at mii? phy ?\\011\\011\\011# Intel 82563 PHYs\n"
"_CFG_inphy*\\011at mii? phy ?\\011\\011\\011# Intel 82555 PHYs\n"
"_CFG_iophy*\\011at mii? phy ?\\011\\011\\011# Intel 82553 PHYs\n"
"_CFG_lxtphy* at mii? phy ?\\011\\011\\011# Level One LXT-970 PHYs\n"
"_CFG_makphy* at mii? phy ?\\011\\011\\011# Marvell Semiconductor 88E1000 PHYs\n"
"_CFG_nsphy*\\011at mii? phy ?\\011\\011\\011# NS83840 PHYs\n"
"_CFG_nsphyter* at mii? phy ?\\011\\011\\011# NS83843 PHYs\n"
"_CFG_pnaphy* at mii? phy ?\\011\\011\\011# generic HomePNA PHYs\n"
"_CFG_qsphy*\\011at mii? phy ?\\011\\011\\011# Quality Semiconductor QS6612 PHYs\n"
"_CFG_rgephy* at mii? phy ?\\011\\011\\011# Realtek 8169S/8110 internal PHYs\n"
"_CFG_rlphy*\\011at mii? phy ?\\011\\011\\011# Realtek 8139/8201L PHYs\n"
"_CFG_sqphy*\\011at mii? phy ?\\011\\011\\011# Seeq 80220/80221/80223 PHYs\n"
"_CFG_tlphy*\\011at mii? phy ?\\011\\011\\011# ThunderLAN PHYs\n"
"_CFG_tqphy*\\011at mii? phy ?\\011\\011\\011# TDK Semiconductor PHYs\n"
"_CFG_ukphy*\\011at mii? phy ?\\011\\011\\011# generic unknown PHYs\n"
"_CFG_urlphy* at mii? phy ?\\011\\011\\011# Realtek RTL8150L internal PHYs\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# USB Controller and Devices\n"
"_CFG_\n"
"_CFG_# PCI USB controllers\n"
"_CFG_# xhci*\\011at pci?\\011dev ? function ?\\011# eXtensible Host Controller\n"
"_CFG_\\011\\011\\011\\011\\011# xhci is at best experimental\n"
"_CFG_ehci*\\011at pci?\\011dev ? function ?\\011# Enhanced Host Controller\n"
"_CFG_ohci*\\011at pci?\\011dev ? function ?\\011# Open Host Controller\n"
"_CFG_uhci*\\011at pci?\\011dev ? function ?\\011# Universal Host Controller (Intel)\n"
"_CFG_\n"
"_CFG_# CardBus USB controllers\n"
"_CFG_ehci*\\011at cardbus? function ?\\011# Enhanced Host Controller\n"
"_CFG_ohci*\\011at cardbus? function ?\\011# Open Host Controller\n"
"_CFG_uhci*\\011at cardbus? function ?\\011\\011# Universal Host Controller (Intel)\n"
"_CFG_\n"
"_CFG_# ISA USB controllers\n"
"_CFG_#slhci0\\011at isa? port 0x300 irq 5\\011# ScanLogic SL811HS\n"
"_CFG_\n"
"_CFG_# PCMCIA USB controllers\n"
"_CFG_slhci*\\011at pcmcia? function ?\\011\\011# ScanLogic SL811HS\n"
"_CFG_\n"
"_CFG_# USB bus support\n"
"_CFG_# usb*\\011at xhci?\n"
"_CFG_usb*\\011at ehci?\n"
"_CFG_usb*\\011at ohci?\n"
"_CFG_usb*\\011at uhci?\n"
"_CFG_usb*\\011at slhci?\n"
"_CFG_\n"
"_CFG_# USB Hubs\n"
"_CFG_uhub*\\011at usb?\n"
"_CFG_uhub*\\011at uhub? port ?\n"
"_CFG_\n"
"_CFG_# USB HID device\n"
"_CFG_uhidev* at uhub? port ? configuration ? interface ?\n"
"_CFG_\n"
"_CFG_# USB Mice\n"
"_CFG_ums*\\011at uhidev? reportid ?\n"
"_CFG_wsmouse* at ums? mux 0\n"
"_CFG_\n"
"_CFG_# USB Touchscreens\n"
"_CFG_uts*\\011at uhidev? reportid ?\n"
"_CFG_wsmouse* at uts? mux 0\n"
"_CFG_\n"
"_CFG_# USB eGalax touch-panel\n"
"_CFG_uep*\\011at uhub? port ?\n"
"_CFG_wsmouse* at uep? mux 0\n"
"_CFG_\n"
"_CFG_# USB Keyboards\n"
"_CFG_ukbd*\\011at uhidev? reportid ?\n"
"_CFG_wskbd*\\011at ukbd? console ? mux 1\n"
"_CFG_\n"
"_CFG_# USB serial adapter\n"
"_CFG_ucycom* at uhidev? reportid ?\n"
"_CFG_\n"
"_CFG_# USB Generic HID devices\n"
"_CFG_uhid*\\011at uhidev? reportid ?\n"
"_CFG_\n"
"_CFG_# USB LCDs and USB-VGA adaptors\n"
"_CFG_udl*\\011at uhub? port ?\\011\\011# DisplayLink DL-1x0/1x5\n"
"_CFG_wsdisplay* at udl?\n"
"_CFG_\n"
"_CFG_# USB Printer\n"
"_CFG_ulpt*\\011at uhub? port ? configuration ? interface ?\n"
"_CFG_\n"
"_CFG_# USB Modem\n"
"_CFG_umodem* at uhub? port ? configuration ?\n"
"_CFG_ucom*\\011at umodem?\n"
"_CFG_\n"
"_CFG_# Option N.V. Wireless WAN modems\n"
"_CFG_uhso*\\011at uhub? port ? configuration ?\n"
"_CFG_\n"
"_CFG_# USB Mass Storage\n"
"_CFG_umass*\\011at uhub? port ? configuration ? interface ?\n"
"_CFG_wd* at umass?\n"
"_CFG_\n"
"_CFG_# USB audio\n"
"_CFG_uaudio* at uhub? port ? configuration ?\n"
"_CFG_uaudio* at usbifif?\n"
"_CFG_\n"
"_CFG_# USB MIDI\n"
"_CFG_umidi*\\011at uhub? port ? configuration ?\n"
"_CFG_\n"
"_CFG_# USB IrDA\n"
"_CFG_# USB-IrDA bridge spec\n"
"_CFG_uirda*\\011at uhub? port ? configuration ? interface ?\n"
"_CFG_irframe* at uirda?\n"
"_CFG_\n"
"_CFG_stuirda* at uhub? port ? configuration ? interface ?\n"
"_CFG_irframe* at stuirda?\n"
"_CFG_\n"
"_CFG_# SigmaTel STIr4200 USB/IrDA Bridge\n"
"_CFG_ustir*\\011at uhub? port ?\n"
"_CFG_irframe* at ustir?\n"
"_CFG_\n"
"_CFG_# KingSun/DonShine USB/IrDA Bridge\n"
"_CFG_udsir*\\011at uhub? port ?\n"
"_CFG_irframe* at udsir?\n"
"_CFG_\n"
"_CFG_# Windows Media Center IR transceiver\n"
"_CFG_irmce*\\011at uhub? port ?\n"
"_CFG_cir*\\011at irmce?\n"
"_CFG_\n"
"_CFG_# USB Ethernet adapters\n"
"_CFG_aue*\\011at uhub? port ?\\011\\011# ADMtek AN986 Pegasus based adapters\n"
"_CFG_axe*\\011at uhub? port ?\\011\\011# ASIX AX88172 based adapters\n"
"_CFG_axen*\\011at uhub? port ?\\011\\011# ASIX AX88178a/AX88179 based adapters\n"
"_CFG_cdce*\\011at uhub? port ?\\011\\011# CDC, Ethernet Networking Control Model\n"
"_CFG_cue*\\011at uhub? port ?\\011\\011# CATC USB-EL1201A based adapters\n"
"_CFG_kue*\\011at uhub? port ?\\011\\011# Kawasaki LSI KL5KUSB101B based adapters\n"
"_CFG_udav*\\011at uhub? port ?\\011\\011# Davicom DM9601 based adapters\n"
"_CFG_url*\\011at uhub? port ?\\011\\011# Realtek RTL8150L based adapters\n"
"_CFG_urndis*\\011at uhub? port ?\\011\\011# Microsoft RNDIS specification\n"
"_CFG_\n"
"_CFG_# Prolific PL2301/PL2302 host-to-host adapter\n"
"_CFG_upl*\\011at uhub? port ?\n"
"_CFG_\n"
"_CFG_# Serial adapters\n"
"_CFG_ubsa*\\011at uhub? port ?\\011\\011# Belkin serial adapter\n"
"_CFG_ucom*\\011at ubsa? portno ?\n"
"_CFG_\n"
"_CFG_uchcom* at uhub? port ? \\011# WinChipHead CH341/CH340 serial adapter\n"
"_CFG_ucom*\\011at uchcom? portno ?\n"
"_CFG_\n"
"_CFG_uftdi*\\011at uhub? port ?\\011\\011# FTDI FT8U100AX serial adapter\n"
"_CFG_ucom*\\011at uftdi? portno ?\n"
"_CFG_\n"
"_CFG_uipaq*\\011at uhub? port ?\\011\\011# iPAQ PDAs\n"
"_CFG_ucom*\\011at uipaq? portno ?\n"
"_CFG_\n"
"_CFG_umct*\\011at uhub? port ?\\011\\011# MCT USB-RS232 serial adapter\n"
"_CFG_ucom*\\011at umct? portno ?\n"
"_CFG_\n"
"_CFG_uplcom* at uhub? port ?\\011\\011# I/O DATA USB-RSAQ2 serial adapter\n"
"_CFG_ucom*\\011at uplcom? portno ?\n"
"_CFG_\n"
"_CFG_uslsa*\\011at uhub? port ?\\011\\011# Silicon Labs USB-RS232 serial adapter\n"
"_CFG_ucom*\\011at uslsa? portno ?\n"
"_CFG_\n"
"_CFG_uvscom* at uhub? port ?\\011\\011# SUNTAC Slipper U VS-10U serial adapter\n"
"_CFG_ucom*\\011at uvscom? portno ?\n"
"_CFG_\n"
"_CFG_# RIM BlackBerry\n"
"_CFG_uberry* at uhub? port ?\n"
"_CFG_\n"
"_CFG_# Apple iPad\n"
"_CFG_uipad* at uhub? port ?\n"
"_CFG_\n"
"_CFG_# Diamond Multimedia Rio 500\n"
"_CFG_urio*\\011at uhub? port ?\n"
"_CFG_\n"
"_CFG_# USB Handspring Visor\n"
"_CFG_uvisor* at uhub? port ?\n"
"_CFG_ucom*\\011at uvisor?\n"
"_CFG_\n"
"_CFG_# Kyocera AIR-EDGE PHONE\n"
"_CFG_ukyopon* at uhub? port ?\n"
"_CFG_ucom*\\011at ukyopon? portno ?\n"
"_CFG_\n"
"_CFG_# USB scanners\n"
"_CFG_uscanner* at uhub? port ?\n"
"_CFG_\n"
"_CFG_# USB 802.11 adapters\n"
"_CFG_athn*\\011at uhub? port ?\\011\\011# Atheros AR9002U\n"
"_CFG_atu*\\011at uhub? port ?\\011\\011# Atmel at76c50x 802.11b\n"
"_CFG_otus*\\011at uhub? port ?\\011\\011# Atheros AR9001U\n"
"_CFG_ural*\\011at uhub? port ?\\011\\011# Ralink Technology RT2500USB 802.11a/b/g\n"
"_CFG_rum*\\011at uhub? port ?\\011\\011# Ralink Technology RT2501/RT2601 802.11a/b/g\n"
"_CFG_run*\\011at uhub? port ?\\011\\011# Ralink Technology RT(2[78]|30)00 802.11a/b/g/n\n"
"_CFG_urtw*\\011at uhub? port ?\\011\\011# Realtek RTL8187/RTL8187B 802.11b/g\n"
"_CFG_urtwn*\\011at uhub? port ?\\011\\011# Realtek RTL8188CU/RTL8192CU 802.11b/g/n\n"
"_CFG_zyd*\\011at uhub? port ?\\011\\011# Zydas ZD1211\n"
"_CFG_\n"
"_CFG_# USB scanners that use SCSI emulation, e.g., HP5300\n"
"_CFG_usscanner* at uhub? port ?\n"
"_CFG_\n"
"_CFG_# Topfield TF5000PVR range of DVB recorders\n"
"_CFG_utoppy* at uhub? port ?\n"
"_CFG_\n"
"_CFG_# Y@P firmware loader\n"
"_CFG_uyap*\\011at uhub? port ?\n"
"_CFG_\n"
"_CFG_# D-Link DSB-R100 USB radio\n"
"_CFG_udsbr*\\011at uhub? port ?\n"
"_CFG_radio*\\011at udsbr?\n"
"_CFG_\n"
"_CFG_# USB Generic driver\n"
"_CFG_ugen*\\011at uhub? port ?\n"
"_CFG_\n"
"_CFG_# USB 3G datacards\n"
"_CFG_u3ginit* at uhub? port ?\n"
"_CFG_u3g*\\011at uhub? port ?\n"
"_CFG_ucom*\\011at u3g?\n"
"_CFG_\n"
"_CFG_# USB generic serial port (e.g., data over cellular)\n"
"_CFG_ugensa* at uhub? port ?\n"
"_CFG_ucom*\\011at ugensa?\n"
"_CFG_\n"
"_CFG_# IrDA and Consumer Ir devices\n"
"_CFG_\n"
"_CFG_# Toshiba Oboe\n"
"_CFG_#oboe*\\011at pci? dev ? function ?\\011# broken -- vtophys\n"
"_CFG_#irframe* at oboe?\n"
"_CFG_\n"
"_CFG_# PCI IEEE1394 controllers\n"
"_CFG_fwohci* at pci? dev ? function ?\\011# IEEE1394 Open Host Controller\n"
"_CFG_\n"
"_CFG_# CardBus IEEE1394 controllers\n"
"_CFG_fwohci* at cardbus? function ?\\011\\011# IEEE1394 Open Host Controller\n"
"_CFG_\n"
"_CFG_ieee1394if* at fwohci?\n"
"_CFG_fwip*\\011at ieee1394if?\\011\\011\\011# IP over IEEE1394\n"
"_CFG_sbp*\\011at ieee1394if? euihi ? euilo ?\n"
"_CFG_\n"
"_CFG_# Audio Devices\n"
"_CFG_\n"
"_CFG_# PCI audio devices\n"
"_CFG_auacer* at pci? dev ? function ?\\011# ALi M5455 integrated AC'97 Audio\n"
"_CFG_auich*\\011at pci? dev ? function ?\\011# Intel/AMD/nVidia AC'97 Audio\n"
"_CFG_auixp*\\011at pci? dev ? function ?\\011# ATI IXP AC'97 Audio\n"
"_CFG_autri*\\011at pci? dev ? function ?\\011# Trident 4DWAVE based AC'97 Audio\n"
"_CFG_auvia*\\011at pci? dev ? function ?\\011# VIA AC'97 audio\n"
"_CFG_#azalia* at pci? dev ? function ?\\011# High Definition Audio\n"
"_CFG_clcs*\\011at pci? dev ? function ?\\011# Cirrus Logic CS4280\n"
"_CFG_clct*\\011at pci? dev ? function ?\\011# Cirrus Logic CS4281\n"
"_CFG_cmpci*\\011at pci? dev ? function ?\\011# C-Media CMI8338/8738\n"
"_CFG_eap*\\011at pci? dev ? function ?\\011# Ensoniq AudioPCI\n"
"_CFG_emuxki* at pci? dev ? function ?\\011# Creative SBLive! and PCI512\n"
"_CFG_esa*\\011at pci? dev ? function ?\\011# ESS Allegro-1 / Maestro-3 PCI Audio\n"
"_CFG_esm*\\011at pci? dev ? function ?\\011# ESS Maestro-1/2/2e PCI Audio Accelerator\n"
"_CFG_eso*\\011at pci? dev ? function ?\\011# ESS Solo-1 PCI AudioDrive\n"
"_CFG_fms*\\011at pci? dev ? function ?\\011# Forte Media FM801\n"
"_CFG_neo*\\011at pci? dev ? function ?\\011# NeoMagic 256 AC'97 Audio\n"
"_CFG_sv*\\011at pci? dev ? function ?\\011# S3 SonicVibes\n"
"_CFG_yds*\\011at pci? dev ? function ?\\011# Yamaha DS-1 PCI Audio\n"
"_CFG_\n"
"_CFG_# OPL[23] FM synthesizers\n"
"_CFG_#opl0\\011at isa? port 0x388\\011# use only if not attached to sound card\n"
"_CFG_opl*\\011at cmpci? flags 1\n"
"_CFG_opl*\\011at eso?\n"
"_CFG_opl*\\011at fms?\n"
"_CFG_opl*\\011at sv?\n"
"_CFG_\n"
"_CFG_# High Definition Audio\n"
"_CFG_hdaudio*\\011at pci? dev ? function ?\\011# High Definition Audio\n"
"_CFG_hdafg*\\011\\011at hdaudiobus?\n"
"_CFG_\n"
"_CFG_# Audio support\n"
"_CFG_audio*\\011at audiobus?\n"
"_CFG_\n"
"_CFG_# MPU 401 UARTs\n"
"_CFG_#mpu*\\011at isa? port 0x330 irq 9\\011# MPU401 or compatible card\n"
"_CFG_mpu*\\011at cmpci?\n"
"_CFG_mpu*\\011at eso?\n"
"_CFG_mpu*\\011at yds?\n"
"_CFG_\n"
"_CFG_# MIDI support\n"
"_CFG_midi*\\011at midibus?\n"
"_CFG_midi*\\011at pcppi?\\011\\011# MIDI interface to the PC speaker\n"
"_CFG_\n"
"_CFG_# The spkr driver provides a simple tone interface to the built in speaker.\n"
"_CFG_#spkr0\\011at pcppi?\\011\\011# PC speaker\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# FM-Radio devices\n"
"_CFG_# PCI radio devices\n"
"_CFG_#gtp*\\011at pci? dev ? function ? # Guillemot Maxi Radio FM 2000 Radio Card\n"
"_CFG_\n"
"_CFG_# Radio support\n"
"_CFG_#radio*\\011at gtp?\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# Video capture devices\n"
"_CFG_\n"
"_CFG_auvitek* at uhub?\\011\\011\\011# Auvitek AU0828 USB TV\n"
"_CFG_coram*\\011at pci? dev ? function ?\\011# Conexant CX23885 PCI-E TV\n"
"_CFG_cxdtv*\\011at pci? dev ? function ?\\011# Conexant CX2388[0-3] PCI TV\n"
"_CFG_emdtv*\\011at uhub?\\011\\011\\011# Empia EM28xx USB TV\n"
"_CFG_cir*\\011at emdtv?\n"
"_CFG_pseye*\\011at uhub?\\011\\011\\011# Sony PLAYSTATION(R) Eye webcam\n"
"_CFG_uvideo* at uhub?\\011\\011\\011# USB Video Class capture devices\n"
"_CFG_\n"
"_CFG_video*\\011at videobus?\\011\\011\\011# Analog capture interface\n"
"_CFG_dtv*\\011at dtvbus?\\011\\011\\011# Digital capture interface\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# TV cards\n"
"_CFG_\n"
"_CFG_# Brooktree 848/849/878/879 based TV cards\n"
"_CFG_bktr* at pci? dev ? function ?\n"
"_CFG_radio* at bktr?\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# Bluetooth Controller and Device support\n"
"_CFG_\n"
"_CFG_# Bluetooth PCMCIA Controllers\n"
"_CFG_bt3c* at pcmcia? function ?\\011\\011# 3Com 3CRWB6096-A\n"
"_CFG_btbc* at pcmcia? function ?\\011\\011# AnyCom BlueCard LSE041/039/139\n"
"_CFG_\n"
"_CFG_# Bluetooth SDIO Controllers\n"
"_CFG_sbt* at sdmmc?\n"
"_CFG_\n"
"_CFG_# Bluetooth USB Controllers\n"
"_CFG_ubt* at uhub? port ?\n"
"_CFG_aubtfwl* at uhub? port ?\n"
"_CFG_\n"
"_CFG_# Bluetooth Device Hub\n"
"_CFG_bthub* at bcsp?\n"
"_CFG_bthub* at bt3c?\n"
"_CFG_bthub* at btbc?\n"
"_CFG_bthub* at btuart?\n"
"_CFG_bthub* at sbt?\n"
"_CFG_bthub* at ubt?\n"
"_CFG_\n"
"_CFG_# Bluetooth HID support\n"
"_CFG_bthidev* at bthub?\n"
"_CFG_\n"
"_CFG_# Bluetooth Mouse\n"
"_CFG_btms* at bthidev? reportid ?\n"
"_CFG_wsmouse* at btms? mux 0\n"
"_CFG_\n"
"_CFG_# Bluetooth Keyboard\n"
"_CFG_btkbd* at bthidev? reportid ?\n"
"_CFG_wskbd* at btkbd? console ? mux 1\n"
"_CFG_\n"
"_CFG_# Bluetooth Apple Magic Mouse\n"
"_CFG_btmagic* at bthub?\n"
"_CFG_wsmouse* at btmagic? mux 0\n"
"_CFG_\n"
"_CFG_# Bluetooth Audio support\n"
"_CFG_btsco* at bthub?\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# SD/MMC/SDIO Controller and Device support\n"
"_CFG_\n"
"_CFG_# SD/MMC controller\n"
"_CFG_sdhc*\\011at pci?\\011\\011# SD Host Controller\n"
"_CFG_rtsx*\\011at pci?\\011\\011# Realtek RTS5209/RTS5229 Card Reader\n"
"_CFG_sdhc*\\011at cardbus?\\011# SD Host Controller\n"
"_CFG_sdmmc*\\011at sdhc?\\011# SD/MMC bus\n"
"_CFG_sdmmc*\\011at rtsx?\\011# SD/MMC bus\n"
"_CFG_\n"
"_CFG_ld*\\011at sdmmc?\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# Middle Digital, Inc. PCI-Weasel serial console board control\n"
"_CFG_# devices (watchdog timer, etc.)\n"
"_CFG_weasel* at pci?\n"
"_CFG_\n"
"_CFG_# Virtio devices\n"
"_CFG_virtio*\\011at pci? dev ? function ?\\011# Virtio PCI device\n"
"_CFG_viomb*\\011at virtio?\\011\\011\\011# Virtio memory balloon device\n"
"_CFG_ld*\\011at virtio?\\011\\011\\011# Virtio disk device\n"
"_CFG_vioif*\\011at virtio?\\011\\011\\011# Virtio network device\n"
"_CFG_viornd*\\011at virtio?\\011\\011\\011# Virtio entropy device\n"
"_CFG_vioscsi* at virtio?\\011\\011\\011# Virtio SCSI device\n"
"_CFG_\n"
"_CFG_# Pull in optional local configuration\n"
"_CFG_cinclude \"arch/amd64/conf/GENERIC.local\"\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# Pseudo-Devices\n"
"_CFG_\n"
"_CFG_pseudo-device \\011crypto\\011\\011\\011# /dev/crypto device\n"
"_CFG_pseudo-device\\011swcrypto\\011\\011# software crypto implementation\n"
"_CFG_\n"
"_CFG_# disk/mass storage pseudo-devices\n"
"_CFG_pseudo-device\\011bio\\011\\011\\011# RAID control device driver\n"
"_CFG_pseudo-device\\011ccd\\011\\011\\011# concatenated/striped disk devices\n"
"_CFG_pseudo-device\\011cgd\\011\\011\\011# cryptographic disk devices\n"
"_CFG_pseudo-device\\011raid\\011\\011\\011# RAIDframe disk driver\n"
"_CFG_options \\011RAID_AUTOCONFIG\\011\\011# auto-configuration of RAID components\n"
"_CFG_#Options to enable various other RAIDframe RAID types.\n"
"_CFG_#options \\011RF_INCLUDE_EVENODD=1\n"
"_CFG_#options \\011RF_INCLUDE_RAID5_RS=1\n"
"_CFG_#options \\011RF_INCLUDE_PARITYLOGGING=1\n"
"_CFG_#options \\011RF_INCLUDE_CHAINDECLUSTER=1\n"
"_CFG_#options \\011RF_INCLUDE_INTERDECLUSTER=1\n"
"_CFG_#options \\011RF_INCLUDE_PARITY_DECLUSTERING=1\n"
"_CFG_#options \\011RF_INCLUDE_PARITY_DECLUSTERING_DS=1\n"
"_CFG_pseudo-device\\011fss\\011\\011\\011# file system snapshot device\n"
"_CFG_pseudo-device\\011putter\\011\\011\\011# for puffs and pud\n"
"_CFG_\n"
"_CFG_pseudo-device\\011md\\011\\011\\011# memory disk device (ramdisk)\n"
"_CFG_options \\011MEMORY_DISK_HOOKS\\011# enable root ramdisk\n"
"_CFG_options \\011MEMORY_DISK_DYNAMIC\\011# loaded via kernel module(7)\n"
"_CFG_\n"
"_CFG_pseudo-device\\011vnd\\011\\011\\011# disk-like interface to files\n"
"_CFG_options \\011VND_COMPRESSION\\011\\011# compressed vnd(4)\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_# network pseudo-devices\n"
"_CFG_pseudo-device\\011bpfilter\\011\\011# Berkeley packet filter\n"
"_CFG_#pseudo-device\\011carp\\011\\011\\011# Common Address Redundancy Protocol\n"
"_CFG_pseudo-device\\011ipfilter\\011\\011# IP filter (firewall) and NAT\n"
"_CFG_pseudo-device\\011loop\\011\\011\\011# network loopback\n"
"_CFG_#pseudo-device\\011ifmpls\\011\\011\\011# MPLS pseudo-interface\n"
"_CFG_pseudo-device\\011ppp\\011\\011\\011# Point-to-Point Protocol\n"
"_CFG_pseudo-device\\011pppoe\\011\\011\\011# PPP over Ethernet (RFC 2516)\n"
"_CFG_pseudo-device\\011sl\\011\\011\\011# Serial Line IP\n"
"_CFG_pseudo-device\\011strip\\011\\011\\011# Starmode Radio IP (Metricom)\n"
"_CFG_pseudo-device\\011irframetty\\011\\011# IrDA frame line discipline\n"
"_CFG_pseudo-device\\011tun\\011\\011\\011# network tunneling over tty\n"
"_CFG_pseudo-device\\011tap\\011\\011\\011# virtual Ethernet\n"
"_CFG_pseudo-device\\011gre\\011\\011\\011# generic L3 over IP tunnel\n"
"_CFG_pseudo-device\\011gif\\011\\011\\011# IPv[46] over IPv[46] tunnel (RFC1933)\n"
"_CFG_#pseudo-device\\011faith\\011\\011\\011# IPv[46] tcp relay translation i/f\n"
"_CFG_pseudo-device\\011stf\\011\\011\\011# 6to4 IPv6 over IPv4 encapsulation\n"
"_CFG_pseudo-device\\011vlan\\011\\011\\011# IEEE 802.1q encapsulation\n"
"_CFG_pseudo-device\\011bridge\\011\\011\\011# simple inter-network bridging\n"
"_CFG_#options \\011BRIDGE_IPF\\011\\011# bridge uses IP/IPv6 pfil hooks too\n"
"_CFG_pseudo-device\\011agr\\011\\011\\011# IEEE 802.3ad link aggregation\n"
"_CFG_#pseudo-device\\011pf\\011\\011\\011# PF packet filter\n"
"_CFG_#pseudo-device\\011pflog\\011\\011\\011# PF log if\n"
"_CFG_#pseudo-device\\011pfsync\\011\\011\\011# PF sync if\n"
"_CFG_#pseudo-device\\011npf\\011\\011\\011# NPF packet filter\n"
"_CFG_\n"
"_CFG_#\n"
"_CFG_# accept filters\n"
"_CFG_pseudo-device   accf_data\\011\\011# \"dataready\" accept filter\n"
"_CFG_pseudo-device   accf_http\\011\\011# \"httpready\" accept filter\n"
"_CFG_\n"
"_CFG_# miscellaneous pseudo-devices\n"
"_CFG_pseudo-device\\011pty\\011\\011\\011# pseudo-terminals\n"
"_CFG_pseudo-device\\011sequencer\\011\\011# MIDI sequencer\n"
"_CFG_# rnd works; RND_COM does not on port i386 yet.\n"
"_CFG_#options \\011RND_COM\\011\\011\\011# use \"com\" randomness as well (BROKEN)\n"
"_CFG_pseudo-device\\011clockctl\\011\\011# user control of clock subsystem\n"
"_CFG_pseudo-device\\011ksyms\\011\\011\\011# /dev/ksyms\n"
"_CFG_pseudo-device\\011lockstat\\011\\011# lock profiling\n"
"_CFG_pseudo-device\\011bcsp\\011\\011\\011# BlueCore Serial Protocol\n"
"_CFG_pseudo-device\\011btuart\\011\\011\\011# Bluetooth HCI UART (H4)\n"
"_CFG_\n"
"_CFG_# a pseudo device needed for Coda\\011# also needs CODA (above)\n"
"_CFG_pseudo-device\\011vcoda\\011\\011\\011# coda minicache <-> venus comm.\n"
"_CFG_\n"
"_CFG_# a pseudo device needed for SMBFS\n"
"_CFG_pseudo-device\\011nsmb\\011\\011\\011# experimental - SMB requester\n"
"_CFG_\n"
"_CFG_# wscons pseudo-devices\n"
"_CFG_pseudo-device\\011wsmux\\011\\011\\011# mouse & keyboard multiplexor\n"
"_CFG_pseudo-device\\011wsfont\n"
"_CFG_\n"
"_CFG_# pseudo audio device driver\n"
"_CFG_pseudo-device\\011pad\n"
"_CFG_\n"
"_CFG_# userland interface to drivers, including autoconf and properties retrieval\n"
"_CFG_pseudo-device\\011drvctl\n"
"_CFG_\n"
"_CFG_options \\011FILEASSOC\\011\\011# fileassoc(9) - required for Veriexec\n"
"_CFG_\n"
"_CFG_# Veriexec\n"
"_CFG_#\n"
"_CFG_# a pseudo device needed for veriexec\n"
"_CFG_pseudo-device\\011veriexec\n"
"_CFG_#\n"
"_CFG_# Uncomment the fingerprint methods below that are desired. Note that\n"
"_CFG_# removing fingerprint methods will have almost no impact on the kernel\n"
"_CFG_# code size.\n"
"_CFG_#\n"
"_CFG_options VERIFIED_EXEC_FP_RMD160\n"
"_CFG_options VERIFIED_EXEC_FP_SHA256\n"
"_CFG_options VERIFIED_EXEC_FP_SHA384\n"
"_CFG_options VERIFIED_EXEC_FP_SHA512\n"
"_CFG_options VERIFIED_EXEC_FP_SHA1\n"
"_CFG_options VERIFIED_EXEC_FP_MD5\n"
"_CFG_\n"
"_CFG_options \\011PAX_MPROTECT=0\\011\\011# PaX mprotect(2) restrictions\n"
"_CFG_options \\011PAX_ASLR=0\\011\\011# PaX Address Space Layout Randomization\n"
#ifdef INCLUDE_CONFIG_FILE

"_CFG_### END CONFIG FILE \"MYKERNEL\"\n"
"_CFG_### (included from \"arch/amd64/conf/std.amd64\")\n"
"_CFG_###> # $NetBSD: std.amd64,v 1.9.12.1 2015/05/09 08:47:14 snj Exp $\n"
"_CFG_###> #\n"
"_CFG_###> # standard, required NetBSD/amd64 'options'\n"
"_CFG_###> \n"
"_CFG_###> machine amd64 x86\n"
"_CFG_###> include\\011\\011\"conf/std\"\\011# MI standard options\n"
"_CFG_###> \n"
"_CFG_###> options \\011CPU_IN_CKSUM\n"
"_CFG_###> options \\011EXEC_ELF64\\011# exec ELF binaries\n"
"_CFG_###> options \\011EXEC_SCRIPT\\011# exec #! scripts\n"
"_CFG_###> options \\011MTRR\n"
"_CFG_###> options\\011\\011MULTIPROCESSOR\n"
"_CFG_###> \n"
"_CFG_###> options \\011CHILD_MAX=1024\\011# 160 is too few\n"
"_CFG_###> options \\011OPEN_MAX=1024\\011# 128 is too few\n"
"_CFG_###> \n"
"_CFG_###> mainbus0 at root\n"
"_CFG_###> cpu* at mainbus?\n"
"_CFG_###> ioapic* at mainbus? apid ?\n"
"_CFG_###> \n"
"_CFG_###> # Atheros HAL options\n"
"_CFG_###> include \"external/isc/atheros_hal/conf/std.ath_hal\"\n"
"_CFG_### (end include \"arch/amd64/conf/std.amd64\")\n"
"_CFG_### (included from \"conf/std\")\n"
"_CFG_###> # $NetBSD: std,v 1.14 2011/11/22 21:25:42 tls Exp $\n"
"_CFG_###> #\n"
"_CFG_###> # standard MI 'options'\n"
"_CFG_###> #\n"
"_CFG_###> # this file is for options which can't be off-by-default for some reasons.\n"
"_CFG_###> # \"it's commonly used\" is NOT a good reason to enable options here.\n"
"_CFG_###> \n"
"_CFG_###> # the following options are on-by-default to keep\n"
"_CFG_###> # kernel config file compatibility.\n"
"_CFG_###> options\\011VMSWAP\\011\\011# Swap device/file support\n"
"_CFG_###> options\\011BUFQ_FCFS\\011# First-come First-serve strategy\n"
"_CFG_###> options\\011BUFQ_DISKSORT\\011# Traditional min seek sort strategy\n"
"_CFG_###> options\\011RFC2292\\011\\011# Previous version of Adv. Sockets API for IPv6 \n"
"_CFG_###> options\\011PTRACE\\011\\011# Include ptrace(2)\n"
"_CFG_###> options\\011COREDUMP\\011# allow processes to coredump.\n"
"_CFG_###> options\\011AIO\\011\\011# POSIX asynchronous I/O\n"
"_CFG_###> options\\011MQUEUE\\011\\011# POSIX message queues\n"
"_CFG_###> \n"
"_CFG_###> #\n"
"_CFG_###> # Security model.\n"
"_CFG_###> #\n"
"_CFG_###> options\\011secmodel_bsd44\\011# Traditional 4.4BSD security model\n"
"_CFG_###> \n"
"_CFG_###> #\n"
"_CFG_###> # Scheduling algorithm\n"
"_CFG_###> #\n"
"_CFG_###> options\\011SCHED_4BSD\n"
"_CFG_###> \n"
"_CFG_###> pseudo-device\\011cpuctl\n"
"_CFG_###> \n"
"_CFG_###> #\n"
"_CFG_###> # Kernel entropy pool and random-number generator pseudodevice.\n"
"_CFG_###> # The pseudodevice might stop being \"std\" when the two are torn\n"
"_CFG_###> # apart some day but the entropy pool itself never will (they are\n"
"_CFG_###> # presently implemented in the same source file)\n"
"_CFG_###> #\n"
"_CFG_###> pseudo-device\\011rnd\n"
"_CFG_### (end include \"conf/std\")\n"
"_CFG_### (included from \"external/isc/atheros_hal/conf/std.ath_hal\")\n"
"_CFG_###> #options ATHHAL_ASSERT\n"
"_CFG_###> #options ATHHAL_DEBUG\n"
"_CFG_###> #options ATHHAL_DEBUG_ALQ\n"
"_CFG_###> \n"
"_CFG_###> # Atheros HAL Chipset Support\n"
"_CFG_###> #\n"
"_CFG_###> options ATHHAL_AR5210\n"
"_CFG_###> options ATHHAL_AR5211\n"
"_CFG_###> options ATHHAL_AR5212\n"
"_CFG_###> options ATHHAL_AR5311\n"
"_CFG_###> #options ATHHAL_AR5312\n"
"_CFG_###> #options ATHHAL_AR2316\n"
"_CFG_###> #options ATHHAL_AR2317\n"
"_CFG_###> options ATHHAL_AR5416\n"
"_CFG_###> options ATHHAL_AR9280\n"
"_CFG_###> options ATHHAL_AR9285\n"
"_CFG_###> \n"
"_CFG_###> # Atheros AR5212/AR5312 RF Support\n"
"_CFG_###> #\n"
"_CFG_###> options ATHHAL_RF2316\n"
"_CFG_###> options ATHHAL_RF2317\n"
"_CFG_###> options ATHHAL_RF2413\n"
"_CFG_###> options ATHHAL_RF2425\n"
"_CFG_###> options ATHHAL_RF5111\n"
"_CFG_###> options ATHHAL_RF5112\n"
"_CFG_###> options ATHHAL_RF5413\n"
"_CFG_### (end include \"external/isc/atheros_hal/conf/std.ath_hal\")\n"
#endif /* INCLUDE_CONFIG_FILE */
;
#endif /* INCLUDE_CONFIG_FILE || INCLUDE_JUST_CONFIG */
#endif /* CONFIG_FILE */
